-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity array_mul is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_src1_axi_V_data_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    img_src1_axi_V_data_V_empty_n : IN STD_LOGIC;
    img_src1_axi_V_data_V_read : OUT STD_LOGIC;
    img_src1_axi_V_keep_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    img_src1_axi_V_keep_V_empty_n : IN STD_LOGIC;
    img_src1_axi_V_keep_V_read : OUT STD_LOGIC;
    img_src1_axi_V_strb_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    img_src1_axi_V_strb_V_empty_n : IN STD_LOGIC;
    img_src1_axi_V_strb_V_read : OUT STD_LOGIC;
    img_src1_axi_V_user_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    img_src1_axi_V_user_V_empty_n : IN STD_LOGIC;
    img_src1_axi_V_user_V_read : OUT STD_LOGIC;
    img_src1_axi_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    img_src1_axi_V_last_V_empty_n : IN STD_LOGIC;
    img_src1_axi_V_last_V_read : OUT STD_LOGIC;
    img_src1_axi_V_id_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    img_src1_axi_V_id_V_empty_n : IN STD_LOGIC;
    img_src1_axi_V_id_V_read : OUT STD_LOGIC;
    img_src1_axi_V_dest_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    img_src1_axi_V_dest_V_empty_n : IN STD_LOGIC;
    img_src1_axi_V_dest_V_read : OUT STD_LOGIC;
    img_src2_axi_V_data_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    img_src2_axi_V_data_V_empty_n : IN STD_LOGIC;
    img_src2_axi_V_data_V_read : OUT STD_LOGIC;
    img_src2_axi_V_keep_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    img_src2_axi_V_keep_V_empty_n : IN STD_LOGIC;
    img_src2_axi_V_keep_V_read : OUT STD_LOGIC;
    img_src2_axi_V_strb_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    img_src2_axi_V_strb_V_empty_n : IN STD_LOGIC;
    img_src2_axi_V_strb_V_read : OUT STD_LOGIC;
    img_src2_axi_V_user_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    img_src2_axi_V_user_V_empty_n : IN STD_LOGIC;
    img_src2_axi_V_user_V_read : OUT STD_LOGIC;
    img_src2_axi_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    img_src2_axi_V_last_V_empty_n : IN STD_LOGIC;
    img_src2_axi_V_last_V_read : OUT STD_LOGIC;
    img_src2_axi_V_id_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    img_src2_axi_V_id_V_empty_n : IN STD_LOGIC;
    img_src2_axi_V_id_V_read : OUT STD_LOGIC;
    img_src2_axi_V_dest_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    img_src2_axi_V_dest_V_empty_n : IN STD_LOGIC;
    img_src2_axi_V_dest_V_read : OUT STD_LOGIC;
    img_result_axi_V_data_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    img_result_axi_V_data_V_full_n : IN STD_LOGIC;
    img_result_axi_V_data_V_write : OUT STD_LOGIC;
    img_result_axi_V_keep_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_result_axi_V_keep_V_full_n : IN STD_LOGIC;
    img_result_axi_V_keep_V_write : OUT STD_LOGIC;
    img_result_axi_V_strb_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_result_axi_V_strb_V_full_n : IN STD_LOGIC;
    img_result_axi_V_strb_V_write : OUT STD_LOGIC;
    img_result_axi_V_user_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    img_result_axi_V_user_V_full_n : IN STD_LOGIC;
    img_result_axi_V_user_V_write : OUT STD_LOGIC;
    img_result_axi_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    img_result_axi_V_last_V_full_n : IN STD_LOGIC;
    img_result_axi_V_last_V_write : OUT STD_LOGIC;
    img_result_axi_V_id_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    img_result_axi_V_id_V_full_n : IN STD_LOGIC;
    img_result_axi_V_id_V_write : OUT STD_LOGIC;
    img_result_axi_V_dest_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    img_result_axi_V_dest_V_full_n : IN STD_LOGIC;
    img_result_axi_V_dest_V_write : OUT STD_LOGIC;
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of array_mul is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "array_mul,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.232000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=28,HLS_SYN_FF=4017,HLS_SYN_LUT=7393,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal t_V_1_reg_257 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond4_i_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal i_V_fu_363_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_504 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_i_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_509 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state14_pp0_stage0_iter0 : BOOLEAN;
    signal img_result5_data_str_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img_result5_data_str_empty_n : STD_LOGIC;
    signal img_result5_data_str_read : STD_LOGIC;
    signal img_result6_data_str_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img_result6_data_str_empty_n : STD_LOGIC;
    signal img_result6_data_str_read : STD_LOGIC;
    signal img_result_data_stre_full_n : STD_LOGIC;
    signal img_result_data_stre_write : STD_LOGIC;
    signal img_result_data_stre_1_full_n : STD_LOGIC;
    signal img_result_data_stre_1_write : STD_LOGIC;
    signal ap_block_state15_pp0_stage0_iter1 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal j_V_fu_374_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state14 : STD_LOGIC;
    signal grp_AddWeighted_fu_268_ap_start : STD_LOGIC;
    signal grp_AddWeighted_fu_268_ap_done : STD_LOGIC;
    signal grp_AddWeighted_fu_268_ap_idle : STD_LOGIC;
    signal grp_AddWeighted_fu_268_ap_ready : STD_LOGIC;
    signal grp_AddWeighted_fu_268_src1_data_stream_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_AddWeighted_fu_268_src1_data_stream_V_empty_n : STD_LOGIC;
    signal grp_AddWeighted_fu_268_src1_data_stream_V_read : STD_LOGIC;
    signal grp_AddWeighted_fu_268_src2_data_stream_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_AddWeighted_fu_268_src2_data_stream_V_empty_n : STD_LOGIC;
    signal grp_AddWeighted_fu_268_src2_data_stream_V_read : STD_LOGIC;
    signal grp_AddWeighted_fu_268_dst_data_stream_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_AddWeighted_fu_268_dst_data_stream_V_full_n : STD_LOGIC;
    signal grp_AddWeighted_fu_268_dst_data_stream_V_write : STD_LOGIC;
    signal grp_Mul_fu_277_ap_start : STD_LOGIC;
    signal grp_Mul_fu_277_ap_done : STD_LOGIC;
    signal grp_Mul_fu_277_ap_idle : STD_LOGIC;
    signal grp_Mul_fu_277_ap_ready : STD_LOGIC;
    signal grp_Mul_fu_277_src1_data_stream_V_read : STD_LOGIC;
    signal grp_Mul_fu_277_src2_data_stream_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Mul_fu_277_src2_data_stream_V_empty_n : STD_LOGIC;
    signal grp_Mul_fu_277_src2_data_stream_V_read : STD_LOGIC;
    signal grp_Mul_fu_277_dst_data_stream_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Mul_fu_277_dst_data_stream_V_full_n : STD_LOGIC;
    signal grp_Mul_fu_277_dst_data_stream_V_write : STD_LOGIC;
    signal grp_Mul_fu_286_ap_start : STD_LOGIC;
    signal grp_Mul_fu_286_ap_done : STD_LOGIC;
    signal grp_Mul_fu_286_ap_idle : STD_LOGIC;
    signal grp_Mul_fu_286_ap_ready : STD_LOGIC;
    signal grp_Mul_fu_286_src1_data_stream_V_read : STD_LOGIC;
    signal grp_Mul_fu_286_src2_data_stream_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Mul_fu_286_src2_data_stream_V_empty_n : STD_LOGIC;
    signal grp_Mul_fu_286_src2_data_stream_V_read : STD_LOGIC;
    signal grp_Mul_fu_286_dst_data_stream_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Mul_fu_286_dst_data_stream_V_full_n : STD_LOGIC;
    signal grp_Mul_fu_286_dst_data_stream_V_write : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_ap_start : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_ap_done : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_ap_idle : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_ap_ready : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_empty_n : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_read : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_empty_n : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_read : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_empty_n : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_read : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_empty_n : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_read : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_empty_n : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_read : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_empty_n : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_read : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_empty_n : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_read : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_full_n : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_write : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_full_n : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_write : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_326_ap_start : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_326_ap_done : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_326_ap_idle : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_326_ap_ready : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_326_img_data_stream_0_V_read : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_326_img_data_stream_1_V_read : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_data_V_din : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_data_V_write : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_keep_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_keep_V_write : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_strb_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_strb_V_write : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_user_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_user_V_write : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_last_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_last_V_write : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_id_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_id_V_write : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_dest_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_dest_V_write : STD_LOGIC;
    signal grp_Split_fu_348_ap_start : STD_LOGIC;
    signal grp_Split_fu_348_ap_done : STD_LOGIC;
    signal grp_Split_fu_348_ap_idle : STD_LOGIC;
    signal grp_Split_fu_348_ap_ready : STD_LOGIC;
    signal grp_Split_fu_348_src_data_stream_0_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Split_fu_348_src_data_stream_0_V_empty_n : STD_LOGIC;
    signal grp_Split_fu_348_src_data_stream_0_V_read : STD_LOGIC;
    signal grp_Split_fu_348_src_data_stream_1_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Split_fu_348_src_data_stream_1_V_empty_n : STD_LOGIC;
    signal grp_Split_fu_348_src_data_stream_1_V_read : STD_LOGIC;
    signal grp_Split_fu_348_dst0_data_stream_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Split_fu_348_dst0_data_stream_V_full_n : STD_LOGIC;
    signal grp_Split_fu_348_dst0_data_stream_V_write : STD_LOGIC;
    signal grp_Split_fu_348_dst1_data_stream_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Split_fu_348_dst1_data_stream_V_full_n : STD_LOGIC;
    signal grp_Split_fu_348_dst1_data_stream_V_write : STD_LOGIC;
    signal t_V_reg_246 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_AddWeighted_fu_268_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal img_result1_data_str_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img_result1_data_str_empty_n : STD_LOGIC;
    signal img_result1_data_str_read : STD_LOGIC;
    signal img_result4_data_str_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img_result4_data_str_empty_n : STD_LOGIC;
    signal img_result4_data_str_read : STD_LOGIC;
    signal img_result2_data_str_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img_result2_data_str_empty_n : STD_LOGIC;
    signal img_result2_data_str_read : STD_LOGIC;
    signal img_result3_data_str_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img_result3_data_str_empty_n : STD_LOGIC;
    signal img_result3_data_str_read : STD_LOGIC;
    signal img_result5_data_str_full_n : STD_LOGIC;
    signal img_result5_data_str_write : STD_LOGIC;
    signal img_result6_data_str_full_n : STD_LOGIC;
    signal img_result6_data_str_write : STD_LOGIC;
    signal grp_Mul_fu_277_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal img1_Re_data_stream_s_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img1_Re_data_stream_s_empty_n : STD_LOGIC;
    signal img1_Re_data_stream_s_read : STD_LOGIC;
    signal img2_Re_data_stream_s_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img2_Re_data_stream_s_empty_n : STD_LOGIC;
    signal img2_Re_data_stream_s_read : STD_LOGIC;
    signal img2_Im_data_stream_s_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img2_Im_data_stream_s_empty_n : STD_LOGIC;
    signal img2_Im_data_stream_s_read : STD_LOGIC;
    signal img_result1_data_str_full_n : STD_LOGIC;
    signal img_result1_data_str_write : STD_LOGIC;
    signal img_result3_data_str_full_n : STD_LOGIC;
    signal img_result3_data_str_write : STD_LOGIC;
    signal grp_Mul_fu_286_ap_start_reg : STD_LOGIC := '0';
    signal img1_Im_data_stream_s_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img1_Im_data_stream_s_empty_n : STD_LOGIC;
    signal img1_Im_data_stream_s_read : STD_LOGIC;
    signal img_result2_data_str_full_n : STD_LOGIC;
    signal img_result2_data_str_write : STD_LOGIC;
    signal img_result4_data_str_full_n : STD_LOGIC;
    signal img_result4_data_str_write : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_295_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal img1_data_stream_0_s_full_n : STD_LOGIC;
    signal img1_data_stream_0_s_write : STD_LOGIC;
    signal img2_data_stream_0_s_full_n : STD_LOGIC;
    signal img2_data_stream_0_s_write : STD_LOGIC;
    signal img1_data_stream_1_s_full_n : STD_LOGIC;
    signal img1_data_stream_1_s_write : STD_LOGIC;
    signal img2_data_stream_1_s_full_n : STD_LOGIC;
    signal img2_data_stream_1_s_write : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_326_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal img_result_data_stre_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img_result_data_stre_empty_n : STD_LOGIC;
    signal img_result_data_stre_read : STD_LOGIC;
    signal img_result_data_stre_1_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img_result_data_stre_1_empty_n : STD_LOGIC;
    signal img_result_data_stre_1_read : STD_LOGIC;
    signal grp_Split_fu_348_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal img1_data_stream_0_s_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img1_data_stream_0_s_empty_n : STD_LOGIC;
    signal img1_data_stream_0_s_read : STD_LOGIC;
    signal img2_data_stream_0_s_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img2_data_stream_0_s_empty_n : STD_LOGIC;
    signal img2_data_stream_0_s_read : STD_LOGIC;
    signal img1_data_stream_1_s_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img1_data_stream_1_s_empty_n : STD_LOGIC;
    signal img1_data_stream_1_s_read : STD_LOGIC;
    signal img2_data_stream_1_s_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal img2_data_stream_1_s_empty_n : STD_LOGIC;
    signal img2_data_stream_1_s_read : STD_LOGIC;
    signal img1_Re_data_stream_s_full_n : STD_LOGIC;
    signal img1_Re_data_stream_s_write : STD_LOGIC;
    signal img2_Re_data_stream_s_full_n : STD_LOGIC;
    signal img2_Re_data_stream_s_write : STD_LOGIC;
    signal img1_Im_data_stream_s_full_n : STD_LOGIC;
    signal img1_Im_data_stream_s_write : STD_LOGIC;
    signal img2_Im_data_stream_s_full_n : STD_LOGIC;
    signal img2_Im_data_stream_s_write : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_block_state8_on_subcall_done : BOOLEAN;
    signal ap_block_state10_on_subcall_done : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component AddWeighted IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src1_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        src1_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        src1_data_stream_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        src1_data_stream_V_empty_n : IN STD_LOGIC;
        src1_data_stream_V_read : OUT STD_LOGIC;
        src2_data_stream_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        src2_data_stream_V_empty_n : IN STD_LOGIC;
        src2_data_stream_V_read : OUT STD_LOGIC;
        dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        dst_data_stream_V_full_n : IN STD_LOGIC;
        dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component Mul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src1_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        src1_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        src1_data_stream_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        src1_data_stream_V_empty_n : IN STD_LOGIC;
        src1_data_stream_V_read : OUT STD_LOGIC;
        src2_data_stream_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        src2_data_stream_V_empty_n : IN STD_LOGIC;
        src2_data_stream_V_read : OUT STD_LOGIC;
        dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        dst_data_stream_V_full_n : IN STD_LOGIC;
        dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component AXIvideo2Mat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        AXI_video_strm_V_data_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        AXI_video_strm_V_data_V_empty_n : IN STD_LOGIC;
        AXI_video_strm_V_data_V_read : OUT STD_LOGIC;
        AXI_video_strm_V_keep_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        AXI_video_strm_V_keep_V_empty_n : IN STD_LOGIC;
        AXI_video_strm_V_keep_V_read : OUT STD_LOGIC;
        AXI_video_strm_V_strb_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        AXI_video_strm_V_strb_V_empty_n : IN STD_LOGIC;
        AXI_video_strm_V_strb_V_read : OUT STD_LOGIC;
        AXI_video_strm_V_user_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        AXI_video_strm_V_user_V_empty_n : IN STD_LOGIC;
        AXI_video_strm_V_user_V_read : OUT STD_LOGIC;
        AXI_video_strm_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        AXI_video_strm_V_last_V_empty_n : IN STD_LOGIC;
        AXI_video_strm_V_last_V_read : OUT STD_LOGIC;
        AXI_video_strm_V_id_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        AXI_video_strm_V_id_V_empty_n : IN STD_LOGIC;
        AXI_video_strm_V_id_V_read : OUT STD_LOGIC;
        AXI_video_strm_V_dest_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        AXI_video_strm_V_dest_V_empty_n : IN STD_LOGIC;
        AXI_video_strm_V_dest_V_read : OUT STD_LOGIC;
        img_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        img_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        img_data_stream_0_V_full_n : IN STD_LOGIC;
        img_data_stream_0_V_write : OUT STD_LOGIC;
        img_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        img_data_stream_1_V_full_n : IN STD_LOGIC;
        img_data_stream_1_V_write : OUT STD_LOGIC );
    end component;


    component Mat2AXIvideo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        img_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        img_data_stream_0_V_empty_n : IN STD_LOGIC;
        img_data_stream_0_V_read : OUT STD_LOGIC;
        img_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        img_data_stream_1_V_empty_n : IN STD_LOGIC;
        img_data_stream_1_V_read : OUT STD_LOGIC;
        AXI_video_strm_V_data_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        AXI_video_strm_V_data_V_full_n : IN STD_LOGIC;
        AXI_video_strm_V_data_V_write : OUT STD_LOGIC;
        AXI_video_strm_V_keep_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        AXI_video_strm_V_keep_V_full_n : IN STD_LOGIC;
        AXI_video_strm_V_keep_V_write : OUT STD_LOGIC;
        AXI_video_strm_V_strb_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        AXI_video_strm_V_strb_V_full_n : IN STD_LOGIC;
        AXI_video_strm_V_strb_V_write : OUT STD_LOGIC;
        AXI_video_strm_V_user_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        AXI_video_strm_V_user_V_full_n : IN STD_LOGIC;
        AXI_video_strm_V_user_V_write : OUT STD_LOGIC;
        AXI_video_strm_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        AXI_video_strm_V_last_V_full_n : IN STD_LOGIC;
        AXI_video_strm_V_last_V_write : OUT STD_LOGIC;
        AXI_video_strm_V_id_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        AXI_video_strm_V_id_V_full_n : IN STD_LOGIC;
        AXI_video_strm_V_id_V_write : OUT STD_LOGIC;
        AXI_video_strm_V_dest_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        AXI_video_strm_V_dest_V_full_n : IN STD_LOGIC;
        AXI_video_strm_V_dest_V_write : OUT STD_LOGIC );
    end component;


    component Split IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        src_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        src_data_stream_0_V_empty_n : IN STD_LOGIC;
        src_data_stream_0_V_read : OUT STD_LOGIC;
        src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        src_data_stream_1_V_empty_n : IN STD_LOGIC;
        src_data_stream_1_V_read : OUT STD_LOGIC;
        dst0_data_stream_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        dst0_data_stream_V_full_n : IN STD_LOGIC;
        dst0_data_stream_V_write : OUT STD_LOGIC;
        dst1_data_stream_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        dst1_data_stream_V_full_n : IN STD_LOGIC;
        dst1_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component fifo_w64_d4_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    grp_AddWeighted_fu_268 : component AddWeighted
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AddWeighted_fu_268_ap_start,
        ap_done => grp_AddWeighted_fu_268_ap_done,
        ap_idle => grp_AddWeighted_fu_268_ap_idle,
        ap_ready => grp_AddWeighted_fu_268_ap_ready,
        src1_rows_V_read => rows,
        src1_cols_V_read => cols,
        src1_data_stream_V_dout => grp_AddWeighted_fu_268_src1_data_stream_V_dout,
        src1_data_stream_V_empty_n => grp_AddWeighted_fu_268_src1_data_stream_V_empty_n,
        src1_data_stream_V_read => grp_AddWeighted_fu_268_src1_data_stream_V_read,
        src2_data_stream_V_dout => grp_AddWeighted_fu_268_src2_data_stream_V_dout,
        src2_data_stream_V_empty_n => grp_AddWeighted_fu_268_src2_data_stream_V_empty_n,
        src2_data_stream_V_read => grp_AddWeighted_fu_268_src2_data_stream_V_read,
        dst_data_stream_V_din => grp_AddWeighted_fu_268_dst_data_stream_V_din,
        dst_data_stream_V_full_n => grp_AddWeighted_fu_268_dst_data_stream_V_full_n,
        dst_data_stream_V_write => grp_AddWeighted_fu_268_dst_data_stream_V_write);

    grp_Mul_fu_277 : component Mul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Mul_fu_277_ap_start,
        ap_done => grp_Mul_fu_277_ap_done,
        ap_idle => grp_Mul_fu_277_ap_idle,
        ap_ready => grp_Mul_fu_277_ap_ready,
        src1_rows_V_read => rows,
        src1_cols_V_read => cols,
        src1_data_stream_V_dout => img1_Re_data_stream_s_dout,
        src1_data_stream_V_empty_n => img1_Re_data_stream_s_empty_n,
        src1_data_stream_V_read => grp_Mul_fu_277_src1_data_stream_V_read,
        src2_data_stream_V_dout => grp_Mul_fu_277_src2_data_stream_V_dout,
        src2_data_stream_V_empty_n => grp_Mul_fu_277_src2_data_stream_V_empty_n,
        src2_data_stream_V_read => grp_Mul_fu_277_src2_data_stream_V_read,
        dst_data_stream_V_din => grp_Mul_fu_277_dst_data_stream_V_din,
        dst_data_stream_V_full_n => grp_Mul_fu_277_dst_data_stream_V_full_n,
        dst_data_stream_V_write => grp_Mul_fu_277_dst_data_stream_V_write);

    grp_Mul_fu_286 : component Mul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Mul_fu_286_ap_start,
        ap_done => grp_Mul_fu_286_ap_done,
        ap_idle => grp_Mul_fu_286_ap_idle,
        ap_ready => grp_Mul_fu_286_ap_ready,
        src1_rows_V_read => rows,
        src1_cols_V_read => cols,
        src1_data_stream_V_dout => img1_Im_data_stream_s_dout,
        src1_data_stream_V_empty_n => img1_Im_data_stream_s_empty_n,
        src1_data_stream_V_read => grp_Mul_fu_286_src1_data_stream_V_read,
        src2_data_stream_V_dout => grp_Mul_fu_286_src2_data_stream_V_dout,
        src2_data_stream_V_empty_n => grp_Mul_fu_286_src2_data_stream_V_empty_n,
        src2_data_stream_V_read => grp_Mul_fu_286_src2_data_stream_V_read,
        dst_data_stream_V_din => grp_Mul_fu_286_dst_data_stream_V_din,
        dst_data_stream_V_full_n => grp_Mul_fu_286_dst_data_stream_V_full_n,
        dst_data_stream_V_write => grp_Mul_fu_286_dst_data_stream_V_write);

    grp_AXIvideo2Mat_fu_295 : component AXIvideo2Mat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_AXIvideo2Mat_fu_295_ap_start,
        ap_done => grp_AXIvideo2Mat_fu_295_ap_done,
        ap_idle => grp_AXIvideo2Mat_fu_295_ap_idle,
        ap_ready => grp_AXIvideo2Mat_fu_295_ap_ready,
        AXI_video_strm_V_data_V_dout => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_dout,
        AXI_video_strm_V_data_V_empty_n => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_empty_n,
        AXI_video_strm_V_data_V_read => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_read,
        AXI_video_strm_V_keep_V_dout => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_dout,
        AXI_video_strm_V_keep_V_empty_n => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_empty_n,
        AXI_video_strm_V_keep_V_read => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_read,
        AXI_video_strm_V_strb_V_dout => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_dout,
        AXI_video_strm_V_strb_V_empty_n => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_empty_n,
        AXI_video_strm_V_strb_V_read => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_read,
        AXI_video_strm_V_user_V_dout => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_dout,
        AXI_video_strm_V_user_V_empty_n => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_empty_n,
        AXI_video_strm_V_user_V_read => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_read,
        AXI_video_strm_V_last_V_dout => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_dout,
        AXI_video_strm_V_last_V_empty_n => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_empty_n,
        AXI_video_strm_V_last_V_read => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_read,
        AXI_video_strm_V_id_V_dout => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_dout,
        AXI_video_strm_V_id_V_empty_n => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_empty_n,
        AXI_video_strm_V_id_V_read => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_read,
        AXI_video_strm_V_dest_V_dout => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_dout,
        AXI_video_strm_V_dest_V_empty_n => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_empty_n,
        AXI_video_strm_V_dest_V_read => grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_read,
        img_rows_V_read => rows,
        img_cols_V_read => cols,
        img_data_stream_0_V_din => grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_din,
        img_data_stream_0_V_full_n => grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_full_n,
        img_data_stream_0_V_write => grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_write,
        img_data_stream_1_V_din => grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_din,
        img_data_stream_1_V_full_n => grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_full_n,
        img_data_stream_1_V_write => grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_write);

    grp_Mat2AXIvideo_fu_326 : component Mat2AXIvideo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Mat2AXIvideo_fu_326_ap_start,
        ap_done => grp_Mat2AXIvideo_fu_326_ap_done,
        ap_idle => grp_Mat2AXIvideo_fu_326_ap_idle,
        ap_ready => grp_Mat2AXIvideo_fu_326_ap_ready,
        img_rows_V_read => rows,
        img_cols_V_read => cols,
        img_data_stream_0_V_dout => img_result_data_stre_dout,
        img_data_stream_0_V_empty_n => img_result_data_stre_empty_n,
        img_data_stream_0_V_read => grp_Mat2AXIvideo_fu_326_img_data_stream_0_V_read,
        img_data_stream_1_V_dout => img_result_data_stre_1_dout,
        img_data_stream_1_V_empty_n => img_result_data_stre_1_empty_n,
        img_data_stream_1_V_read => grp_Mat2AXIvideo_fu_326_img_data_stream_1_V_read,
        AXI_video_strm_V_data_V_din => grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_data_V_din,
        AXI_video_strm_V_data_V_full_n => img_result_axi_V_data_V_full_n,
        AXI_video_strm_V_data_V_write => grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_data_V_write,
        AXI_video_strm_V_keep_V_din => grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_keep_V_din,
        AXI_video_strm_V_keep_V_full_n => img_result_axi_V_keep_V_full_n,
        AXI_video_strm_V_keep_V_write => grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_keep_V_write,
        AXI_video_strm_V_strb_V_din => grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_strb_V_din,
        AXI_video_strm_V_strb_V_full_n => img_result_axi_V_strb_V_full_n,
        AXI_video_strm_V_strb_V_write => grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_strb_V_write,
        AXI_video_strm_V_user_V_din => grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_user_V_din,
        AXI_video_strm_V_user_V_full_n => img_result_axi_V_user_V_full_n,
        AXI_video_strm_V_user_V_write => grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_user_V_write,
        AXI_video_strm_V_last_V_din => grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_last_V_din,
        AXI_video_strm_V_last_V_full_n => img_result_axi_V_last_V_full_n,
        AXI_video_strm_V_last_V_write => grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_last_V_write,
        AXI_video_strm_V_id_V_din => grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_id_V_din,
        AXI_video_strm_V_id_V_full_n => img_result_axi_V_id_V_full_n,
        AXI_video_strm_V_id_V_write => grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_id_V_write,
        AXI_video_strm_V_dest_V_din => grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_dest_V_din,
        AXI_video_strm_V_dest_V_full_n => img_result_axi_V_dest_V_full_n,
        AXI_video_strm_V_dest_V_write => grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_dest_V_write);

    grp_Split_fu_348 : component Split
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Split_fu_348_ap_start,
        ap_done => grp_Split_fu_348_ap_done,
        ap_idle => grp_Split_fu_348_ap_idle,
        ap_ready => grp_Split_fu_348_ap_ready,
        src_rows_V_read => rows,
        src_cols_V_read => cols,
        src_data_stream_0_V_dout => grp_Split_fu_348_src_data_stream_0_V_dout,
        src_data_stream_0_V_empty_n => grp_Split_fu_348_src_data_stream_0_V_empty_n,
        src_data_stream_0_V_read => grp_Split_fu_348_src_data_stream_0_V_read,
        src_data_stream_1_V_dout => grp_Split_fu_348_src_data_stream_1_V_dout,
        src_data_stream_1_V_empty_n => grp_Split_fu_348_src_data_stream_1_V_empty_n,
        src_data_stream_1_V_read => grp_Split_fu_348_src_data_stream_1_V_read,
        dst0_data_stream_V_din => grp_Split_fu_348_dst0_data_stream_V_din,
        dst0_data_stream_V_full_n => grp_Split_fu_348_dst0_data_stream_V_full_n,
        dst0_data_stream_V_write => grp_Split_fu_348_dst0_data_stream_V_write,
        dst1_data_stream_V_din => grp_Split_fu_348_dst1_data_stream_V_din,
        dst1_data_stream_V_full_n => grp_Split_fu_348_dst1_data_stream_V_full_n,
        dst1_data_stream_V_write => grp_Split_fu_348_dst1_data_stream_V_write);

    img1_data_stream_0_s_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_din,
        if_full_n => img1_data_stream_0_s_full_n,
        if_write => img1_data_stream_0_s_write,
        if_dout => img1_data_stream_0_s_dout,
        if_empty_n => img1_data_stream_0_s_empty_n,
        if_read => img1_data_stream_0_s_read);

    img1_data_stream_1_s_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_din,
        if_full_n => img1_data_stream_1_s_full_n,
        if_write => img1_data_stream_1_s_write,
        if_dout => img1_data_stream_1_s_dout,
        if_empty_n => img1_data_stream_1_s_empty_n,
        if_read => img1_data_stream_1_s_read);

    img2_data_stream_0_s_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_din,
        if_full_n => img2_data_stream_0_s_full_n,
        if_write => img2_data_stream_0_s_write,
        if_dout => img2_data_stream_0_s_dout,
        if_empty_n => img2_data_stream_0_s_empty_n,
        if_read => img2_data_stream_0_s_read);

    img2_data_stream_1_s_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_din,
        if_full_n => img2_data_stream_1_s_full_n,
        if_write => img2_data_stream_1_s_write,
        if_dout => img2_data_stream_1_s_dout,
        if_empty_n => img2_data_stream_1_s_empty_n,
        if_read => img2_data_stream_1_s_read);

    img1_Re_data_stream_s_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_Split_fu_348_dst0_data_stream_V_din,
        if_full_n => img1_Re_data_stream_s_full_n,
        if_write => img1_Re_data_stream_s_write,
        if_dout => img1_Re_data_stream_s_dout,
        if_empty_n => img1_Re_data_stream_s_empty_n,
        if_read => img1_Re_data_stream_s_read);

    img1_Im_data_stream_s_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_Split_fu_348_dst1_data_stream_V_din,
        if_full_n => img1_Im_data_stream_s_full_n,
        if_write => img1_Im_data_stream_s_write,
        if_dout => img1_Im_data_stream_s_dout,
        if_empty_n => img1_Im_data_stream_s_empty_n,
        if_read => img1_Im_data_stream_s_read);

    img2_Re_data_stream_s_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_Split_fu_348_dst0_data_stream_V_din,
        if_full_n => img2_Re_data_stream_s_full_n,
        if_write => img2_Re_data_stream_s_write,
        if_dout => img2_Re_data_stream_s_dout,
        if_empty_n => img2_Re_data_stream_s_empty_n,
        if_read => img2_Re_data_stream_s_read);

    img2_Im_data_stream_s_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_Split_fu_348_dst1_data_stream_V_din,
        if_full_n => img2_Im_data_stream_s_full_n,
        if_write => img2_Im_data_stream_s_write,
        if_dout => img2_Im_data_stream_s_dout,
        if_empty_n => img2_Im_data_stream_s_empty_n,
        if_read => img2_Im_data_stream_s_read);

    img_result_data_stre_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => img_result5_data_str_dout,
        if_full_n => img_result_data_stre_full_n,
        if_write => img_result_data_stre_write,
        if_dout => img_result_data_stre_dout,
        if_empty_n => img_result_data_stre_empty_n,
        if_read => img_result_data_stre_read);

    img_result_data_stre_1_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => img_result6_data_str_dout,
        if_full_n => img_result_data_stre_1_full_n,
        if_write => img_result_data_stre_1_write,
        if_dout => img_result_data_stre_1_dout,
        if_empty_n => img_result_data_stre_1_empty_n,
        if_read => img_result_data_stre_1_read);

    img_result1_data_str_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_Mul_fu_277_dst_data_stream_V_din,
        if_full_n => img_result1_data_str_full_n,
        if_write => img_result1_data_str_write,
        if_dout => img_result1_data_str_dout,
        if_empty_n => img_result1_data_str_empty_n,
        if_read => img_result1_data_str_read);

    img_result2_data_str_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_Mul_fu_286_dst_data_stream_V_din,
        if_full_n => img_result2_data_str_full_n,
        if_write => img_result2_data_str_write,
        if_dout => img_result2_data_str_dout,
        if_empty_n => img_result2_data_str_empty_n,
        if_read => img_result2_data_str_read);

    img_result3_data_str_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_Mul_fu_277_dst_data_stream_V_din,
        if_full_n => img_result3_data_str_full_n,
        if_write => img_result3_data_str_write,
        if_dout => img_result3_data_str_dout,
        if_empty_n => img_result3_data_str_empty_n,
        if_read => img_result3_data_str_read);

    img_result4_data_str_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_Mul_fu_286_dst_data_stream_V_din,
        if_full_n => img_result4_data_str_full_n,
        if_write => img_result4_data_str_write,
        if_dout => img_result4_data_str_dout,
        if_empty_n => img_result4_data_str_empty_n,
        if_read => img_result4_data_str_read);

    img_result5_data_str_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_AddWeighted_fu_268_dst_data_stream_V_din,
        if_full_n => img_result5_data_str_full_n,
        if_write => img_result5_data_str_write,
        if_dout => img_result5_data_str_dout,
        if_empty_n => img_result5_data_str_empty_n,
        if_read => img_result5_data_str_read);

    img_result6_data_str_fifo_U : component fifo_w64_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_AddWeighted_fu_268_dst_data_stream_V_din,
        if_full_n => img_result6_data_str_full_n,
        if_write => img_result6_data_str_write,
        if_dout => img_result6_data_str_dout,
        if_empty_n => img_result6_data_str_empty_n,
        if_read => img_result6_data_str_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state14) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond4_i_fu_358_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state14) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state14);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond4_i_fu_358_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_AXIvideo2Mat_fu_295_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AXIvideo2Mat_fu_295_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_AXIvideo2Mat_fu_295_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AXIvideo2Mat_fu_295_ap_ready = ap_const_logic_1)) then 
                    grp_AXIvideo2Mat_fu_295_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_AddWeighted_fu_268_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_AddWeighted_fu_268_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    grp_AddWeighted_fu_268_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AddWeighted_fu_268_ap_ready = ap_const_logic_1)) then 
                    grp_AddWeighted_fu_268_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Mat2AXIvideo_fu_326_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Mat2AXIvideo_fu_326_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond4_i_fu_358_p2 = ap_const_lv1_1))) then 
                    grp_Mat2AXIvideo_fu_326_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Mat2AXIvideo_fu_326_ap_ready = ap_const_logic_1)) then 
                    grp_Mat2AXIvideo_fu_326_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Mul_fu_277_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Mul_fu_277_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    grp_Mul_fu_277_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Mul_fu_277_ap_ready = ap_const_logic_1)) then 
                    grp_Mul_fu_277_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Mul_fu_286_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Mul_fu_286_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    grp_Mul_fu_286_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Mul_fu_286_ap_ready = ap_const_logic_1)) then 
                    grp_Mul_fu_286_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Split_fu_348_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Split_fu_348_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_Split_fu_348_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Split_fu_348_ap_ready = ap_const_logic_1)) then 
                    grp_Split_fu_348_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_1_reg_257_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_fu_369_p2 = ap_const_lv1_0))) then 
                t_V_1_reg_257 <= j_V_fu_374_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond4_i_fu_358_p2 = ap_const_lv1_0))) then 
                t_V_1_reg_257 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                t_V_reg_246 <= i_V_reg_504;
            elsif (((grp_AddWeighted_fu_268_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                t_V_reg_246 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_i_reg_509 <= exitcond_i_fu_369_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                i_V_reg_504 <= i_V_fu_363_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, exitcond4_i_fu_358_p2, ap_CS_fsm_state13, exitcond_i_fu_369_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, grp_AddWeighted_fu_268_ap_done, grp_AXIvideo2Mat_fu_295_ap_done, grp_Mat2AXIvideo_fu_326_ap_done, grp_Split_fu_348_ap_done, ap_CS_fsm_state12, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state17, ap_CS_fsm_state6, ap_block_state4_on_subcall_done, ap_block_state8_on_subcall_done, ap_block_state10_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_AXIvideo2Mat_fu_295_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_Split_fu_348_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_AddWeighted_fu_268_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond4_i_fu_358_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_i_fu_369_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_i_fu_369_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state17 => 
                if (((grp_Mat2AXIvideo_fu_326_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(13);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state16 <= ap_CS_fsm(14);
    ap_CS_fsm_state17 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(exitcond_i_reg_509, img_result5_data_str_empty_n, img_result6_data_str_empty_n, img_result_data_stre_full_n, img_result_data_stre_1_full_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((img_result_data_stre_1_full_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0)) or ((img_result_data_stre_full_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0)) or ((img_result6_data_str_empty_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0)) or ((img_result5_data_str_empty_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(exitcond_i_reg_509, img_result5_data_str_empty_n, img_result6_data_str_empty_n, img_result_data_stre_full_n, img_result_data_stre_1_full_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((img_result_data_stre_1_full_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0)) or ((img_result_data_stre_full_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0)) or ((img_result6_data_str_empty_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0)) or ((img_result5_data_str_empty_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(exitcond_i_reg_509, img_result5_data_str_empty_n, img_result6_data_str_empty_n, img_result_data_stre_full_n, img_result_data_stre_1_full_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((img_result_data_stre_1_full_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0)) or ((img_result_data_stre_full_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0)) or ((img_result6_data_str_empty_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0)) or ((img_result5_data_str_empty_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0))));
    end process;


    ap_block_state10_on_subcall_done_assign_proc : process(grp_AddWeighted_fu_268_ap_done, grp_Mul_fu_277_ap_done, grp_Mul_fu_286_ap_done)
    begin
                ap_block_state10_on_subcall_done <= ((grp_Mul_fu_286_ap_done = ap_const_logic_0) or (grp_Mul_fu_277_ap_done = ap_const_logic_0) or (grp_AddWeighted_fu_268_ap_done = ap_const_logic_0));
    end process;

        ap_block_state14_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_pp0_stage0_iter1_assign_proc : process(exitcond_i_reg_509, img_result5_data_str_empty_n, img_result6_data_str_empty_n, img_result_data_stre_full_n, img_result_data_stre_1_full_n)
    begin
                ap_block_state15_pp0_stage0_iter1 <= (((img_result_data_stre_1_full_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0)) or ((img_result_data_stre_full_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0)) or ((img_result6_data_str_empty_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0)) or ((img_result5_data_str_empty_n = ap_const_logic_0) and (exitcond_i_reg_509 = ap_const_lv1_0)));
    end process;


    ap_block_state4_on_subcall_done_assign_proc : process(grp_AXIvideo2Mat_fu_295_ap_done, grp_Split_fu_348_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_Split_fu_348_ap_done = ap_const_logic_0) or (grp_AXIvideo2Mat_fu_295_ap_done = ap_const_logic_0));
    end process;


    ap_block_state8_on_subcall_done_assign_proc : process(grp_Mul_fu_277_ap_done, grp_Mul_fu_286_ap_done)
    begin
                ap_block_state8_on_subcall_done <= ((grp_Mul_fu_286_ap_done = ap_const_logic_0) or (grp_Mul_fu_277_ap_done = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state14_assign_proc : process(exitcond_i_fu_369_p2)
    begin
        if ((exitcond_i_fu_369_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state14 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_Mat2AXIvideo_fu_326_ap_done, ap_CS_fsm_state17)
    begin
        if (((grp_Mat2AXIvideo_fu_326_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_Mat2AXIvideo_fu_326_ap_done, ap_CS_fsm_state17)
    begin
        if (((grp_Mat2AXIvideo_fu_326_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond4_i_fu_358_p2 <= "1" when (t_V_reg_246 = rows) else "0";
    exitcond_i_fu_369_p2 <= "1" when (t_V_1_reg_257 = cols) else "0";

    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_dout_assign_proc : process(img_src1_axi_V_data_V_dout, img_src2_axi_V_data_V_dout, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_dout <= img_src2_axi_V_data_V_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_dout <= img_src1_axi_V_data_V_dout;
        else 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_dout <= img_src2_axi_V_data_V_dout;
        end if; 
    end process;


    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_empty_n_assign_proc : process(img_src1_axi_V_data_V_empty_n, img_src2_axi_V_data_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_empty_n <= img_src2_axi_V_data_V_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_empty_n <= img_src1_axi_V_data_V_empty_n;
        else 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_empty_n <= img_src2_axi_V_data_V_empty_n;
        end if; 
    end process;


    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_dout_assign_proc : process(img_src1_axi_V_dest_V_dout, img_src2_axi_V_dest_V_dout, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_dout <= img_src2_axi_V_dest_V_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_dout <= img_src1_axi_V_dest_V_dout;
        else 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_dout <= img_src2_axi_V_dest_V_dout;
        end if; 
    end process;


    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_empty_n_assign_proc : process(img_src1_axi_V_dest_V_empty_n, img_src2_axi_V_dest_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_empty_n <= img_src2_axi_V_dest_V_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_empty_n <= img_src1_axi_V_dest_V_empty_n;
        else 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_empty_n <= img_src2_axi_V_dest_V_empty_n;
        end if; 
    end process;


    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_dout_assign_proc : process(img_src1_axi_V_id_V_dout, img_src2_axi_V_id_V_dout, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_dout <= img_src2_axi_V_id_V_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_dout <= img_src1_axi_V_id_V_dout;
        else 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_dout <= img_src2_axi_V_id_V_dout;
        end if; 
    end process;


    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_empty_n_assign_proc : process(img_src1_axi_V_id_V_empty_n, img_src2_axi_V_id_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_empty_n <= img_src2_axi_V_id_V_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_empty_n <= img_src1_axi_V_id_V_empty_n;
        else 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_empty_n <= img_src2_axi_V_id_V_empty_n;
        end if; 
    end process;


    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_dout_assign_proc : process(img_src1_axi_V_keep_V_dout, img_src2_axi_V_keep_V_dout, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_dout <= img_src2_axi_V_keep_V_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_dout <= img_src1_axi_V_keep_V_dout;
        else 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_dout <= img_src2_axi_V_keep_V_dout;
        end if; 
    end process;


    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_empty_n_assign_proc : process(img_src1_axi_V_keep_V_empty_n, img_src2_axi_V_keep_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_empty_n <= img_src2_axi_V_keep_V_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_empty_n <= img_src1_axi_V_keep_V_empty_n;
        else 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_empty_n <= img_src2_axi_V_keep_V_empty_n;
        end if; 
    end process;


    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_dout_assign_proc : process(img_src1_axi_V_last_V_dout, img_src2_axi_V_last_V_dout, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_dout <= img_src2_axi_V_last_V_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_dout <= img_src1_axi_V_last_V_dout;
        else 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_dout <= img_src2_axi_V_last_V_dout;
        end if; 
    end process;


    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_empty_n_assign_proc : process(img_src1_axi_V_last_V_empty_n, img_src2_axi_V_last_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_empty_n <= img_src2_axi_V_last_V_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_empty_n <= img_src1_axi_V_last_V_empty_n;
        else 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_empty_n <= img_src2_axi_V_last_V_empty_n;
        end if; 
    end process;


    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_dout_assign_proc : process(img_src1_axi_V_strb_V_dout, img_src2_axi_V_strb_V_dout, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_dout <= img_src2_axi_V_strb_V_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_dout <= img_src1_axi_V_strb_V_dout;
        else 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_dout <= img_src2_axi_V_strb_V_dout;
        end if; 
    end process;


    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_empty_n_assign_proc : process(img_src1_axi_V_strb_V_empty_n, img_src2_axi_V_strb_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_empty_n <= img_src2_axi_V_strb_V_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_empty_n <= img_src1_axi_V_strb_V_empty_n;
        else 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_empty_n <= img_src2_axi_V_strb_V_empty_n;
        end if; 
    end process;


    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_dout_assign_proc : process(img_src1_axi_V_user_V_dout, img_src2_axi_V_user_V_dout, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_dout <= img_src2_axi_V_user_V_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_dout <= img_src1_axi_V_user_V_dout;
        else 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_dout <= img_src2_axi_V_user_V_dout;
        end if; 
    end process;


    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_empty_n_assign_proc : process(img_src1_axi_V_user_V_empty_n, img_src2_axi_V_user_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_empty_n <= img_src2_axi_V_user_V_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_empty_n <= img_src1_axi_V_user_V_empty_n;
        else 
            grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_empty_n <= img_src2_axi_V_user_V_empty_n;
        end if; 
    end process;

    grp_AXIvideo2Mat_fu_295_ap_start <= grp_AXIvideo2Mat_fu_295_ap_start_reg;

    grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_full_n_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, img1_data_stream_0_s_full_n, img2_data_stream_0_s_full_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_full_n <= img2_data_stream_0_s_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_full_n <= img1_data_stream_0_s_full_n;
        else 
            grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_full_n <= img2_data_stream_0_s_full_n;
        end if; 
    end process;


    grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_full_n_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, img1_data_stream_1_s_full_n, img2_data_stream_1_s_full_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_full_n <= img2_data_stream_1_s_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_full_n <= img1_data_stream_1_s_full_n;
        else 
            grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_full_n <= img2_data_stream_1_s_full_n;
        end if; 
    end process;

    grp_AddWeighted_fu_268_ap_start <= grp_AddWeighted_fu_268_ap_start_reg;

    grp_AddWeighted_fu_268_dst_data_stream_V_full_n_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state10, img_result5_data_str_full_n, img_result6_data_str_full_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_AddWeighted_fu_268_dst_data_stream_V_full_n <= img_result6_data_str_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_AddWeighted_fu_268_dst_data_stream_V_full_n <= img_result5_data_str_full_n;
        else 
            grp_AddWeighted_fu_268_dst_data_stream_V_full_n <= img_result6_data_str_full_n;
        end if; 
    end process;


    grp_AddWeighted_fu_268_src1_data_stream_V_dout_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state10, img_result1_data_str_dout, img_result4_data_str_dout)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_AddWeighted_fu_268_src1_data_stream_V_dout <= img_result4_data_str_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_AddWeighted_fu_268_src1_data_stream_V_dout <= img_result1_data_str_dout;
        else 
            grp_AddWeighted_fu_268_src1_data_stream_V_dout <= img_result4_data_str_dout;
        end if; 
    end process;


    grp_AddWeighted_fu_268_src1_data_stream_V_empty_n_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state10, img_result1_data_str_empty_n, img_result4_data_str_empty_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_AddWeighted_fu_268_src1_data_stream_V_empty_n <= img_result4_data_str_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_AddWeighted_fu_268_src1_data_stream_V_empty_n <= img_result1_data_str_empty_n;
        else 
            grp_AddWeighted_fu_268_src1_data_stream_V_empty_n <= img_result4_data_str_empty_n;
        end if; 
    end process;


    grp_AddWeighted_fu_268_src2_data_stream_V_dout_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state10, img_result2_data_str_dout, img_result3_data_str_dout)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_AddWeighted_fu_268_src2_data_stream_V_dout <= img_result3_data_str_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_AddWeighted_fu_268_src2_data_stream_V_dout <= img_result2_data_str_dout;
        else 
            grp_AddWeighted_fu_268_src2_data_stream_V_dout <= img_result3_data_str_dout;
        end if; 
    end process;


    grp_AddWeighted_fu_268_src2_data_stream_V_empty_n_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state10, img_result2_data_str_empty_n, img_result3_data_str_empty_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_AddWeighted_fu_268_src2_data_stream_V_empty_n <= img_result3_data_str_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_AddWeighted_fu_268_src2_data_stream_V_empty_n <= img_result2_data_str_empty_n;
        else 
            grp_AddWeighted_fu_268_src2_data_stream_V_empty_n <= img_result3_data_str_empty_n;
        end if; 
    end process;

    grp_Mat2AXIvideo_fu_326_ap_start <= grp_Mat2AXIvideo_fu_326_ap_start_reg;
    grp_Mul_fu_277_ap_start <= grp_Mul_fu_277_ap_start_reg;

    grp_Mul_fu_277_dst_data_stream_V_full_n_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state8, img_result1_data_str_full_n, img_result3_data_str_full_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_Mul_fu_277_dst_data_stream_V_full_n <= img_result3_data_str_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_Mul_fu_277_dst_data_stream_V_full_n <= img_result1_data_str_full_n;
        else 
            grp_Mul_fu_277_dst_data_stream_V_full_n <= img_result3_data_str_full_n;
        end if; 
    end process;


    grp_Mul_fu_277_src2_data_stream_V_dout_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state8, img2_Re_data_stream_s_dout, img2_Im_data_stream_s_dout)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_Mul_fu_277_src2_data_stream_V_dout <= img2_Im_data_stream_s_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_Mul_fu_277_src2_data_stream_V_dout <= img2_Re_data_stream_s_dout;
        else 
            grp_Mul_fu_277_src2_data_stream_V_dout <= img2_Im_data_stream_s_dout;
        end if; 
    end process;


    grp_Mul_fu_277_src2_data_stream_V_empty_n_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state8, img2_Re_data_stream_s_empty_n, img2_Im_data_stream_s_empty_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_Mul_fu_277_src2_data_stream_V_empty_n <= img2_Im_data_stream_s_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_Mul_fu_277_src2_data_stream_V_empty_n <= img2_Re_data_stream_s_empty_n;
        else 
            grp_Mul_fu_277_src2_data_stream_V_empty_n <= img2_Im_data_stream_s_empty_n;
        end if; 
    end process;

    grp_Mul_fu_286_ap_start <= grp_Mul_fu_286_ap_start_reg;

    grp_Mul_fu_286_dst_data_stream_V_full_n_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state8, img_result2_data_str_full_n, img_result4_data_str_full_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_Mul_fu_286_dst_data_stream_V_full_n <= img_result4_data_str_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_Mul_fu_286_dst_data_stream_V_full_n <= img_result2_data_str_full_n;
        else 
            grp_Mul_fu_286_dst_data_stream_V_full_n <= img_result4_data_str_full_n;
        end if; 
    end process;


    grp_Mul_fu_286_src2_data_stream_V_dout_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state8, img2_Re_data_stream_s_dout, img2_Im_data_stream_s_dout)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_Mul_fu_286_src2_data_stream_V_dout <= img2_Re_data_stream_s_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_Mul_fu_286_src2_data_stream_V_dout <= img2_Im_data_stream_s_dout;
        else 
            grp_Mul_fu_286_src2_data_stream_V_dout <= img2_Re_data_stream_s_dout;
        end if; 
    end process;


    grp_Mul_fu_286_src2_data_stream_V_empty_n_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state8, img2_Re_data_stream_s_empty_n, img2_Im_data_stream_s_empty_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_Mul_fu_286_src2_data_stream_V_empty_n <= img2_Re_data_stream_s_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_Mul_fu_286_src2_data_stream_V_empty_n <= img2_Im_data_stream_s_empty_n;
        else 
            grp_Mul_fu_286_src2_data_stream_V_empty_n <= img2_Re_data_stream_s_empty_n;
        end if; 
    end process;

    grp_Split_fu_348_ap_start <= grp_Split_fu_348_ap_start_reg;

    grp_Split_fu_348_dst0_data_stream_V_full_n_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, img1_Re_data_stream_s_full_n, img2_Re_data_stream_s_full_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_Split_fu_348_dst0_data_stream_V_full_n <= img2_Re_data_stream_s_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_Split_fu_348_dst0_data_stream_V_full_n <= img1_Re_data_stream_s_full_n;
        else 
            grp_Split_fu_348_dst0_data_stream_V_full_n <= img2_Re_data_stream_s_full_n;
        end if; 
    end process;


    grp_Split_fu_348_dst1_data_stream_V_full_n_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, img1_Im_data_stream_s_full_n, img2_Im_data_stream_s_full_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_Split_fu_348_dst1_data_stream_V_full_n <= img2_Im_data_stream_s_full_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_Split_fu_348_dst1_data_stream_V_full_n <= img1_Im_data_stream_s_full_n;
        else 
            grp_Split_fu_348_dst1_data_stream_V_full_n <= img2_Im_data_stream_s_full_n;
        end if; 
    end process;


    grp_Split_fu_348_src_data_stream_0_V_dout_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, img1_data_stream_0_s_dout, img2_data_stream_0_s_dout)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_Split_fu_348_src_data_stream_0_V_dout <= img2_data_stream_0_s_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_Split_fu_348_src_data_stream_0_V_dout <= img1_data_stream_0_s_dout;
        else 
            grp_Split_fu_348_src_data_stream_0_V_dout <= img2_data_stream_0_s_dout;
        end if; 
    end process;


    grp_Split_fu_348_src_data_stream_0_V_empty_n_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, img1_data_stream_0_s_empty_n, img2_data_stream_0_s_empty_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_Split_fu_348_src_data_stream_0_V_empty_n <= img2_data_stream_0_s_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_Split_fu_348_src_data_stream_0_V_empty_n <= img1_data_stream_0_s_empty_n;
        else 
            grp_Split_fu_348_src_data_stream_0_V_empty_n <= img2_data_stream_0_s_empty_n;
        end if; 
    end process;


    grp_Split_fu_348_src_data_stream_1_V_dout_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, img1_data_stream_1_s_dout, img2_data_stream_1_s_dout)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_Split_fu_348_src_data_stream_1_V_dout <= img2_data_stream_1_s_dout;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_Split_fu_348_src_data_stream_1_V_dout <= img1_data_stream_1_s_dout;
        else 
            grp_Split_fu_348_src_data_stream_1_V_dout <= img2_data_stream_1_s_dout;
        end if; 
    end process;


    grp_Split_fu_348_src_data_stream_1_V_empty_n_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, img1_data_stream_1_s_empty_n, img2_data_stream_1_s_empty_n)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_Split_fu_348_src_data_stream_1_V_empty_n <= img2_data_stream_1_s_empty_n;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_Split_fu_348_src_data_stream_1_V_empty_n <= img1_data_stream_1_s_empty_n;
        else 
            grp_Split_fu_348_src_data_stream_1_V_empty_n <= img2_data_stream_1_s_empty_n;
        end if; 
    end process;

    i_V_fu_363_p2 <= std_logic_vector(unsigned(t_V_reg_246) + unsigned(ap_const_lv32_1));

    img1_Im_data_stream_s_read_assign_proc : process(grp_Mul_fu_286_src1_data_stream_V_read, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            img1_Im_data_stream_s_read <= grp_Mul_fu_286_src1_data_stream_V_read;
        else 
            img1_Im_data_stream_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img1_Im_data_stream_s_write_assign_proc : process(grp_Split_fu_348_dst1_data_stream_V_write, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            img1_Im_data_stream_s_write <= grp_Split_fu_348_dst1_data_stream_V_write;
        else 
            img1_Im_data_stream_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img1_Re_data_stream_s_read_assign_proc : process(grp_Mul_fu_277_src1_data_stream_V_read, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            img1_Re_data_stream_s_read <= grp_Mul_fu_277_src1_data_stream_V_read;
        else 
            img1_Re_data_stream_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img1_Re_data_stream_s_write_assign_proc : process(grp_Split_fu_348_dst0_data_stream_V_write, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            img1_Re_data_stream_s_write <= grp_Split_fu_348_dst0_data_stream_V_write;
        else 
            img1_Re_data_stream_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img1_data_stream_0_s_read_assign_proc : process(grp_Split_fu_348_src_data_stream_0_V_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            img1_data_stream_0_s_read <= grp_Split_fu_348_src_data_stream_0_V_read;
        else 
            img1_data_stream_0_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img1_data_stream_0_s_write_assign_proc : process(grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_write, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img1_data_stream_0_s_write <= grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_write;
        else 
            img1_data_stream_0_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img1_data_stream_1_s_read_assign_proc : process(grp_Split_fu_348_src_data_stream_1_V_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            img1_data_stream_1_s_read <= grp_Split_fu_348_src_data_stream_1_V_read;
        else 
            img1_data_stream_1_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img1_data_stream_1_s_write_assign_proc : process(grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_write, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img1_data_stream_1_s_write <= grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_write;
        else 
            img1_data_stream_1_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img2_Im_data_stream_s_read_assign_proc : process(grp_Mul_fu_277_src2_data_stream_V_read, grp_Mul_fu_286_src2_data_stream_V_read, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            img2_Im_data_stream_s_read <= grp_Mul_fu_286_src2_data_stream_V_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            img2_Im_data_stream_s_read <= grp_Mul_fu_277_src2_data_stream_V_read;
        else 
            img2_Im_data_stream_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img2_Im_data_stream_s_write_assign_proc : process(grp_Split_fu_348_dst1_data_stream_V_write, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            img2_Im_data_stream_s_write <= grp_Split_fu_348_dst1_data_stream_V_write;
        else 
            img2_Im_data_stream_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img2_Re_data_stream_s_read_assign_proc : process(grp_Mul_fu_277_src2_data_stream_V_read, grp_Mul_fu_286_src2_data_stream_V_read, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            img2_Re_data_stream_s_read <= grp_Mul_fu_286_src2_data_stream_V_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            img2_Re_data_stream_s_read <= grp_Mul_fu_277_src2_data_stream_V_read;
        else 
            img2_Re_data_stream_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img2_Re_data_stream_s_write_assign_proc : process(grp_Split_fu_348_dst0_data_stream_V_write, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            img2_Re_data_stream_s_write <= grp_Split_fu_348_dst0_data_stream_V_write;
        else 
            img2_Re_data_stream_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_0_s_read_assign_proc : process(grp_Split_fu_348_src_data_stream_0_V_read, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            img2_data_stream_0_s_read <= grp_Split_fu_348_src_data_stream_0_V_read;
        else 
            img2_data_stream_0_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_0_s_write_assign_proc : process(grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_write, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            img2_data_stream_0_s_write <= grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_write;
        else 
            img2_data_stream_0_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_1_s_read_assign_proc : process(grp_Split_fu_348_src_data_stream_1_V_read, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            img2_data_stream_1_s_read <= grp_Split_fu_348_src_data_stream_1_V_read;
        else 
            img2_data_stream_1_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_1_s_write_assign_proc : process(grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_write, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            img2_data_stream_1_s_write <= grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_write;
        else 
            img2_data_stream_1_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img_result1_data_str_read_assign_proc : process(grp_AddWeighted_fu_268_src1_data_stream_V_read, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            img_result1_data_str_read <= grp_AddWeighted_fu_268_src1_data_stream_V_read;
        else 
            img_result1_data_str_read <= ap_const_logic_0;
        end if; 
    end process;


    img_result1_data_str_write_assign_proc : process(grp_Mul_fu_277_dst_data_stream_V_write, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            img_result1_data_str_write <= grp_Mul_fu_277_dst_data_stream_V_write;
        else 
            img_result1_data_str_write <= ap_const_logic_0;
        end if; 
    end process;


    img_result2_data_str_read_assign_proc : process(grp_AddWeighted_fu_268_src2_data_stream_V_read, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            img_result2_data_str_read <= grp_AddWeighted_fu_268_src2_data_stream_V_read;
        else 
            img_result2_data_str_read <= ap_const_logic_0;
        end if; 
    end process;


    img_result2_data_str_write_assign_proc : process(grp_Mul_fu_286_dst_data_stream_V_write, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            img_result2_data_str_write <= grp_Mul_fu_286_dst_data_stream_V_write;
        else 
            img_result2_data_str_write <= ap_const_logic_0;
        end if; 
    end process;


    img_result3_data_str_read_assign_proc : process(grp_AddWeighted_fu_268_src2_data_stream_V_read, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            img_result3_data_str_read <= grp_AddWeighted_fu_268_src2_data_stream_V_read;
        else 
            img_result3_data_str_read <= ap_const_logic_0;
        end if; 
    end process;


    img_result3_data_str_write_assign_proc : process(grp_Mul_fu_277_dst_data_stream_V_write, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            img_result3_data_str_write <= grp_Mul_fu_277_dst_data_stream_V_write;
        else 
            img_result3_data_str_write <= ap_const_logic_0;
        end if; 
    end process;


    img_result4_data_str_read_assign_proc : process(grp_AddWeighted_fu_268_src1_data_stream_V_read, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            img_result4_data_str_read <= grp_AddWeighted_fu_268_src1_data_stream_V_read;
        else 
            img_result4_data_str_read <= ap_const_logic_0;
        end if; 
    end process;


    img_result4_data_str_write_assign_proc : process(grp_Mul_fu_286_dst_data_stream_V_write, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            img_result4_data_str_write <= grp_Mul_fu_286_dst_data_stream_V_write;
        else 
            img_result4_data_str_write <= ap_const_logic_0;
        end if; 
    end process;


    img_result5_data_str_read_assign_proc : process(exitcond_i_reg_509, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_reg_509 = ap_const_lv1_0))) then 
            img_result5_data_str_read <= ap_const_logic_1;
        else 
            img_result5_data_str_read <= ap_const_logic_0;
        end if; 
    end process;


    img_result5_data_str_write_assign_proc : process(grp_AddWeighted_fu_268_dst_data_stream_V_write, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            img_result5_data_str_write <= grp_AddWeighted_fu_268_dst_data_stream_V_write;
        else 
            img_result5_data_str_write <= ap_const_logic_0;
        end if; 
    end process;


    img_result6_data_str_read_assign_proc : process(exitcond_i_reg_509, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_reg_509 = ap_const_lv1_0))) then 
            img_result6_data_str_read <= ap_const_logic_1;
        else 
            img_result6_data_str_read <= ap_const_logic_0;
        end if; 
    end process;


    img_result6_data_str_write_assign_proc : process(grp_AddWeighted_fu_268_dst_data_stream_V_write, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            img_result6_data_str_write <= grp_AddWeighted_fu_268_dst_data_stream_V_write;
        else 
            img_result6_data_str_write <= ap_const_logic_0;
        end if; 
    end process;

    img_result_axi_V_data_V_din <= grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_data_V_din;

    img_result_axi_V_data_V_write_assign_proc : process(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_data_V_write, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            img_result_axi_V_data_V_write <= grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_data_V_write;
        else 
            img_result_axi_V_data_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_result_axi_V_dest_V_din <= grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_dest_V_din;

    img_result_axi_V_dest_V_write_assign_proc : process(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_dest_V_write, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            img_result_axi_V_dest_V_write <= grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_dest_V_write;
        else 
            img_result_axi_V_dest_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_result_axi_V_id_V_din <= grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_id_V_din;

    img_result_axi_V_id_V_write_assign_proc : process(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_id_V_write, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            img_result_axi_V_id_V_write <= grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_id_V_write;
        else 
            img_result_axi_V_id_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_result_axi_V_keep_V_din <= grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_keep_V_din;

    img_result_axi_V_keep_V_write_assign_proc : process(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_keep_V_write, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            img_result_axi_V_keep_V_write <= grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_keep_V_write;
        else 
            img_result_axi_V_keep_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_result_axi_V_last_V_din <= grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_last_V_din;

    img_result_axi_V_last_V_write_assign_proc : process(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_last_V_write, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            img_result_axi_V_last_V_write <= grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_last_V_write;
        else 
            img_result_axi_V_last_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_result_axi_V_strb_V_din <= grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_strb_V_din;

    img_result_axi_V_strb_V_write_assign_proc : process(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_strb_V_write, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            img_result_axi_V_strb_V_write <= grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_strb_V_write;
        else 
            img_result_axi_V_strb_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_result_axi_V_user_V_din <= grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_user_V_din;

    img_result_axi_V_user_V_write_assign_proc : process(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_user_V_write, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            img_result_axi_V_user_V_write <= grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_user_V_write;
        else 
            img_result_axi_V_user_V_write <= ap_const_logic_0;
        end if; 
    end process;


    img_result_data_stre_1_read_assign_proc : process(grp_Mat2AXIvideo_fu_326_img_data_stream_1_V_read, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            img_result_data_stre_1_read <= grp_Mat2AXIvideo_fu_326_img_data_stream_1_V_read;
        else 
            img_result_data_stre_1_read <= ap_const_logic_0;
        end if; 
    end process;


    img_result_data_stre_1_write_assign_proc : process(exitcond_i_reg_509, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_reg_509 = ap_const_lv1_0))) then 
            img_result_data_stre_1_write <= ap_const_logic_1;
        else 
            img_result_data_stre_1_write <= ap_const_logic_0;
        end if; 
    end process;


    img_result_data_stre_read_assign_proc : process(grp_Mat2AXIvideo_fu_326_img_data_stream_0_V_read, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            img_result_data_stre_read <= grp_Mat2AXIvideo_fu_326_img_data_stream_0_V_read;
        else 
            img_result_data_stre_read <= ap_const_logic_0;
        end if; 
    end process;


    img_result_data_stre_write_assign_proc : process(exitcond_i_reg_509, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_reg_509 = ap_const_lv1_0))) then 
            img_result_data_stre_write <= ap_const_logic_1;
        else 
            img_result_data_stre_write <= ap_const_logic_0;
        end if; 
    end process;


    img_src1_axi_V_data_V_read_assign_proc : process(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_src1_axi_V_data_V_read <= grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_read;
        else 
            img_src1_axi_V_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_src1_axi_V_dest_V_read_assign_proc : process(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_src1_axi_V_dest_V_read <= grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_read;
        else 
            img_src1_axi_V_dest_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_src1_axi_V_id_V_read_assign_proc : process(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_src1_axi_V_id_V_read <= grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_read;
        else 
            img_src1_axi_V_id_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_src1_axi_V_keep_V_read_assign_proc : process(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_src1_axi_V_keep_V_read <= grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_read;
        else 
            img_src1_axi_V_keep_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_src1_axi_V_last_V_read_assign_proc : process(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_src1_axi_V_last_V_read <= grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_read;
        else 
            img_src1_axi_V_last_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_src1_axi_V_strb_V_read_assign_proc : process(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_src1_axi_V_strb_V_read <= grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_read;
        else 
            img_src1_axi_V_strb_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_src1_axi_V_user_V_read_assign_proc : process(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_src1_axi_V_user_V_read <= grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_read;
        else 
            img_src1_axi_V_user_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_src2_axi_V_data_V_read_assign_proc : process(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            img_src2_axi_V_data_V_read <= grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_read;
        else 
            img_src2_axi_V_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_src2_axi_V_dest_V_read_assign_proc : process(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            img_src2_axi_V_dest_V_read <= grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_read;
        else 
            img_src2_axi_V_dest_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_src2_axi_V_id_V_read_assign_proc : process(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            img_src2_axi_V_id_V_read <= grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_read;
        else 
            img_src2_axi_V_id_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_src2_axi_V_keep_V_read_assign_proc : process(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            img_src2_axi_V_keep_V_read <= grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_read;
        else 
            img_src2_axi_V_keep_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_src2_axi_V_last_V_read_assign_proc : process(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            img_src2_axi_V_last_V_read <= grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_read;
        else 
            img_src2_axi_V_last_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_src2_axi_V_strb_V_read_assign_proc : process(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            img_src2_axi_V_strb_V_read <= grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_read;
        else 
            img_src2_axi_V_strb_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_src2_axi_V_user_V_read_assign_proc : process(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            img_src2_axi_V_user_V_read <= grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_read;
        else 
            img_src2_axi_V_user_V_read <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_374_p2 <= std_logic_vector(unsigned(t_V_1_reg_257) + unsigned(ap_const_lv32_1));
end behav;

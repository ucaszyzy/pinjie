// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "AXIvideo2Mat.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic AXIvideo2Mat::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic AXIvideo2Mat::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state1 = "1";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state2 = "10";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state3 = "100";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state4 = "1000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_pp1_stage0 = "10000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state8 = "100000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state9 = "1000000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state10 = "10000000";
const bool AXIvideo2Mat::ap_const_boolean_1 = true;
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_1 = "1";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_4 = "100";
const bool AXIvideo2Mat::ap_const_boolean_0 = false;
const sc_lv<1> AXIvideo2Mat::ap_const_lv1_0 = "0";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_6 = "110";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_3 = "11";
const sc_lv<1> AXIvideo2Mat::ap_const_lv1_1 = "1";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_7 = "111";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_2 = "10";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_5 = "101";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_40 = "1000000";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_7F = "1111111";

AXIvideo2Mat::AXIvideo2Mat(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AXI_video_strm_V_data_V_blk_n);
    sensitive << ( AXI_video_strm_V_data_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_reg_379 );
    sensitive << ( brmerge_fu_307_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( eol_2_reg_253 );

    SC_METHOD(thread_AXI_video_strm_V_data_V_read);
    sensitive << ( AXI_video_strm_V_id_V0_update );

    SC_METHOD(thread_AXI_video_strm_V_dest_V_blk_n);
    sensitive << ( AXI_video_strm_V_dest_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_reg_379 );
    sensitive << ( brmerge_fu_307_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( eol_2_reg_253 );

    SC_METHOD(thread_AXI_video_strm_V_dest_V_read);
    sensitive << ( AXI_video_strm_V_id_V0_update );

    SC_METHOD(thread_AXI_video_strm_V_id_V0_status);
    sensitive << ( AXI_video_strm_V_data_V_empty_n );
    sensitive << ( AXI_video_strm_V_keep_V_empty_n );
    sensitive << ( AXI_video_strm_V_strb_V_empty_n );
    sensitive << ( AXI_video_strm_V_user_V_empty_n );
    sensitive << ( AXI_video_strm_V_last_V_empty_n );
    sensitive << ( AXI_video_strm_V_id_V_empty_n );
    sensitive << ( AXI_video_strm_V_dest_V_empty_n );

    SC_METHOD(thread_AXI_video_strm_V_id_V0_update);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( AXI_video_strm_V_id_V0_status );
    sensitive << ( ap_predicate_op58_read_state6 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( eol_2_reg_253 );

    SC_METHOD(thread_AXI_video_strm_V_id_V_blk_n);
    sensitive << ( AXI_video_strm_V_id_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_reg_379 );
    sensitive << ( brmerge_fu_307_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( eol_2_reg_253 );

    SC_METHOD(thread_AXI_video_strm_V_id_V_read);
    sensitive << ( AXI_video_strm_V_id_V0_update );

    SC_METHOD(thread_AXI_video_strm_V_keep_V_blk_n);
    sensitive << ( AXI_video_strm_V_keep_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_reg_379 );
    sensitive << ( brmerge_fu_307_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( eol_2_reg_253 );

    SC_METHOD(thread_AXI_video_strm_V_keep_V_read);
    sensitive << ( AXI_video_strm_V_id_V0_update );

    SC_METHOD(thread_AXI_video_strm_V_last_V_blk_n);
    sensitive << ( AXI_video_strm_V_last_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_reg_379 );
    sensitive << ( brmerge_fu_307_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( eol_2_reg_253 );

    SC_METHOD(thread_AXI_video_strm_V_last_V_read);
    sensitive << ( AXI_video_strm_V_id_V0_update );

    SC_METHOD(thread_AXI_video_strm_V_strb_V_blk_n);
    sensitive << ( AXI_video_strm_V_strb_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_reg_379 );
    sensitive << ( brmerge_fu_307_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( eol_2_reg_253 );

    SC_METHOD(thread_AXI_video_strm_V_strb_V_read);
    sensitive << ( AXI_video_strm_V_id_V0_update );

    SC_METHOD(thread_AXI_video_strm_V_user_V_blk_n);
    sensitive << ( AXI_video_strm_V_user_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_reg_379 );
    sensitive << ( brmerge_fu_307_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( eol_2_reg_253 );

    SC_METHOD(thread_AXI_video_strm_V_user_V_read);
    sensitive << ( AXI_video_strm_V_id_V0_update );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( exitcond_reg_379_pp1_iter1_reg );
    sensitive << ( AXI_video_strm_V_id_V0_status );
    sensitive << ( ap_predicate_op58_read_state6 );

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( exitcond_reg_379_pp1_iter1_reg );
    sensitive << ( AXI_video_strm_V_id_V0_status );
    sensitive << ( ap_predicate_op58_read_state6 );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( exitcond_reg_379_pp1_iter1_reg );
    sensitive << ( AXI_video_strm_V_id_V0_status );
    sensitive << ( ap_predicate_op58_read_state6 );

    SC_METHOD(thread_ap_block_state5_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state6_pp1_stage0_iter1);
    sensitive << ( AXI_video_strm_V_id_V0_status );
    sensitive << ( ap_predicate_op58_read_state6 );

    SC_METHOD(thread_ap_block_state7_pp1_stage0_iter2);
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( exitcond_reg_379_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_state9);
    sensitive << ( AXI_video_strm_V_id_V0_status );
    sensitive << ( eol_2_reg_253 );

    SC_METHOD(thread_ap_condition_234);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_ap_condition_274);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_reg_379 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter1_state6);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond6_fu_282_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_phi_mux_axi_data_V_1_phi_fu_184_p4);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( exitcond_reg_379_pp1_iter1_reg );
    sensitive << ( axi_data_V_1_reg_181 );
    sensitive << ( p_Val2_s_reg_217 );

    SC_METHOD(thread_ap_phi_mux_eol_1_phi_fu_173_p4);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( exitcond_reg_379_pp1_iter1_reg );
    sensitive << ( eol_1_reg_170 );
    sensitive << ( axi_last_V_2_reg_204 );

    SC_METHOD(thread_ap_phi_mux_eol_2_phi_fu_256_p4);
    sensitive << ( eol_2_reg_253 );

    SC_METHOD(thread_ap_phi_mux_eol_phi_fu_196_p4);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( exitcond_reg_379_pp1_iter1_reg );
    sensitive << ( eol_reg_192 );
    sensitive << ( axi_last_V_2_reg_204 );

    SC_METHOD(thread_ap_phi_mux_p_Val2_s_phi_fu_221_p4);
    sensitive << ( AXI_video_strm_V_data_V_dout );
    sensitive << ( brmerge_fu_307_p2 );
    sensitive << ( ap_phi_mux_axi_data_V_1_phi_fu_184_p4 );
    sensitive << ( ap_phi_reg_pp1_iter1_p_Val2_s_reg_217 );
    sensitive << ( ap_condition_274 );

    SC_METHOD(thread_ap_phi_reg_pp1_iter1_axi_last_V_2_reg_204);

    SC_METHOD(thread_ap_phi_reg_pp1_iter1_p_Val2_s_reg_217);

    SC_METHOD(thread_ap_predicate_op58_read_state6);
    sensitive << ( exitcond_reg_379 );
    sensitive << ( brmerge_fu_307_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( exitcond6_fu_282_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_brmerge_fu_307_p2);
    sensitive << ( ap_phi_mux_eol_phi_fu_196_p4 );
    sensitive << ( sof_1_fu_80 );

    SC_METHOD(thread_exitcond6_fu_282_p2);
    sensitive << ( img_rows_V_read );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( t_V_reg_148 );

    SC_METHOD(thread_exitcond_fu_293_p2);
    sensitive << ( img_cols_V_read );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( t_V_6_reg_159 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_i_V_fu_287_p2);
    sensitive << ( t_V_reg_148 );

    SC_METHOD(thread_img_data_stream_0_V_blk_n);
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( exitcond_reg_379_pp1_iter1_reg );

    SC_METHOD(thread_img_data_stream_0_V_din);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( exitcond_reg_379_pp1_iter1_reg );
    sensitive << ( p_Result_s_reg_392 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_img_data_stream_0_V_write);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( exitcond_reg_379_pp1_iter1_reg );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_img_data_stream_1_V_blk_n);
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( exitcond_reg_379_pp1_iter1_reg );

    SC_METHOD(thread_img_data_stream_1_V_din);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( exitcond_reg_379_pp1_iter1_reg );
    sensitive << ( p_Result_1_reg_397 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_img_data_stream_1_V_write);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( exitcond_reg_379_pp1_iter1_reg );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_j_V_fu_298_p2);
    sensitive << ( t_V_6_reg_159 );

    SC_METHOD(thread_p_Result_s_fu_313_p1);
    sensitive << ( ap_phi_mux_p_Val2_s_phi_fu_221_p4 );

    SC_METHOD(thread_tmp_user_V_fu_273_p1);
    sensitive << ( AXI_video_strm_V_user_V_dout );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_phi_mux_eol_2_phi_fu_256_p4 );
    sensitive << ( AXI_video_strm_V_id_V0_status );
    sensitive << ( exitcond6_fu_282_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( eol_2_reg_253 );
    sensitive << ( tmp_user_V_fu_273_p1 );

    ap_CS_fsm = "00000001";
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "AXIvideo2Mat_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_dout, "(port)AXI_video_strm_V_data_V_dout");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_empty_n, "(port)AXI_video_strm_V_data_V_empty_n");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_read, "(port)AXI_video_strm_V_data_V_read");
    sc_trace(mVcdFile, AXI_video_strm_V_keep_V_dout, "(port)AXI_video_strm_V_keep_V_dout");
    sc_trace(mVcdFile, AXI_video_strm_V_keep_V_empty_n, "(port)AXI_video_strm_V_keep_V_empty_n");
    sc_trace(mVcdFile, AXI_video_strm_V_keep_V_read, "(port)AXI_video_strm_V_keep_V_read");
    sc_trace(mVcdFile, AXI_video_strm_V_strb_V_dout, "(port)AXI_video_strm_V_strb_V_dout");
    sc_trace(mVcdFile, AXI_video_strm_V_strb_V_empty_n, "(port)AXI_video_strm_V_strb_V_empty_n");
    sc_trace(mVcdFile, AXI_video_strm_V_strb_V_read, "(port)AXI_video_strm_V_strb_V_read");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_dout, "(port)AXI_video_strm_V_user_V_dout");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_empty_n, "(port)AXI_video_strm_V_user_V_empty_n");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_read, "(port)AXI_video_strm_V_user_V_read");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_dout, "(port)AXI_video_strm_V_last_V_dout");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_empty_n, "(port)AXI_video_strm_V_last_V_empty_n");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_read, "(port)AXI_video_strm_V_last_V_read");
    sc_trace(mVcdFile, AXI_video_strm_V_id_V_dout, "(port)AXI_video_strm_V_id_V_dout");
    sc_trace(mVcdFile, AXI_video_strm_V_id_V_empty_n, "(port)AXI_video_strm_V_id_V_empty_n");
    sc_trace(mVcdFile, AXI_video_strm_V_id_V_read, "(port)AXI_video_strm_V_id_V_read");
    sc_trace(mVcdFile, AXI_video_strm_V_dest_V_dout, "(port)AXI_video_strm_V_dest_V_dout");
    sc_trace(mVcdFile, AXI_video_strm_V_dest_V_empty_n, "(port)AXI_video_strm_V_dest_V_empty_n");
    sc_trace(mVcdFile, AXI_video_strm_V_dest_V_read, "(port)AXI_video_strm_V_dest_V_read");
    sc_trace(mVcdFile, img_rows_V_read, "(port)img_rows_V_read");
    sc_trace(mVcdFile, img_cols_V_read, "(port)img_cols_V_read");
    sc_trace(mVcdFile, img_data_stream_0_V_din, "(port)img_data_stream_0_V_din");
    sc_trace(mVcdFile, img_data_stream_0_V_full_n, "(port)img_data_stream_0_V_full_n");
    sc_trace(mVcdFile, img_data_stream_0_V_write, "(port)img_data_stream_0_V_write");
    sc_trace(mVcdFile, img_data_stream_1_V_din, "(port)img_data_stream_1_V_din");
    sc_trace(mVcdFile, img_data_stream_1_V_full_n, "(port)img_data_stream_1_V_full_n");
    sc_trace(mVcdFile, img_data_stream_1_V_write, "(port)img_data_stream_1_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_blk_n, "AXI_video_strm_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, exitcond_reg_379, "exitcond_reg_379");
    sc_trace(mVcdFile, brmerge_fu_307_p2, "brmerge_fu_307_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_phi_mux_eol_2_phi_fu_256_p4, "ap_phi_mux_eol_2_phi_fu_256_p4");
    sc_trace(mVcdFile, AXI_video_strm_V_keep_V_blk_n, "AXI_video_strm_V_keep_V_blk_n");
    sc_trace(mVcdFile, AXI_video_strm_V_strb_V_blk_n, "AXI_video_strm_V_strb_V_blk_n");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_blk_n, "AXI_video_strm_V_user_V_blk_n");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_blk_n, "AXI_video_strm_V_last_V_blk_n");
    sc_trace(mVcdFile, AXI_video_strm_V_id_V_blk_n, "AXI_video_strm_V_id_V_blk_n");
    sc_trace(mVcdFile, AXI_video_strm_V_dest_V_blk_n, "AXI_video_strm_V_dest_V_blk_n");
    sc_trace(mVcdFile, img_data_stream_0_V_blk_n, "img_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, exitcond_reg_379_pp1_iter1_reg, "exitcond_reg_379_pp1_iter1_reg");
    sc_trace(mVcdFile, img_data_stream_1_V_blk_n, "img_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, t_V_6_reg_159, "t_V_6_reg_159");
    sc_trace(mVcdFile, eol_1_reg_170, "eol_1_reg_170");
    sc_trace(mVcdFile, axi_data_V_1_reg_181, "axi_data_V_1_reg_181");
    sc_trace(mVcdFile, eol_reg_192, "eol_reg_192");
    sc_trace(mVcdFile, axi_last_V_2_reg_204, "axi_last_V_2_reg_204");
    sc_trace(mVcdFile, p_Val2_s_reg_217, "p_Val2_s_reg_217");
    sc_trace(mVcdFile, tmp_data_V_reg_350, "tmp_data_V_reg_350");
    sc_trace(mVcdFile, AXI_video_strm_V_id_V0_status, "AXI_video_strm_V_id_V0_status");
    sc_trace(mVcdFile, tmp_last_V_reg_358, "tmp_last_V_reg_358");
    sc_trace(mVcdFile, exitcond6_fu_282_p2, "exitcond6_fu_282_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_V_fu_287_p2, "i_V_fu_287_p2");
    sc_trace(mVcdFile, i_V_reg_374, "i_V_reg_374");
    sc_trace(mVcdFile, exitcond_fu_293_p2, "exitcond_fu_293_p2");
    sc_trace(mVcdFile, ap_block_state5_pp1_stage0_iter0, "ap_block_state5_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_predicate_op58_read_state6, "ap_predicate_op58_read_state6");
    sc_trace(mVcdFile, ap_block_state6_pp1_stage0_iter1, "ap_block_state6_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state7_pp1_stage0_iter2, "ap_block_state7_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, j_V_fu_298_p2, "j_V_fu_298_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, p_Result_s_fu_313_p1, "p_Result_s_fu_313_p1");
    sc_trace(mVcdFile, p_Result_s_reg_392, "p_Result_s_reg_392");
    sc_trace(mVcdFile, p_Result_1_reg_397, "p_Result_1_reg_397");
    sc_trace(mVcdFile, ap_block_state9, "ap_block_state9");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter1_state6, "ap_condition_pp1_exit_iter1_state6");
    sc_trace(mVcdFile, axi_last_V_3_reg_229, "axi_last_V_3_reg_229");
    sc_trace(mVcdFile, axi_last_V1_reg_128, "axi_last_V1_reg_128");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, axi_data_V_3_reg_241, "axi_data_V_3_reg_241");
    sc_trace(mVcdFile, axi_data_V1_reg_138, "axi_data_V1_reg_138");
    sc_trace(mVcdFile, t_V_reg_148, "t_V_reg_148");
    sc_trace(mVcdFile, ap_phi_mux_eol_1_phi_fu_173_p4, "ap_phi_mux_eol_1_phi_fu_173_p4");
    sc_trace(mVcdFile, ap_phi_mux_axi_data_V_1_phi_fu_184_p4, "ap_phi_mux_axi_data_V_1_phi_fu_184_p4");
    sc_trace(mVcdFile, ap_phi_mux_eol_phi_fu_196_p4, "ap_phi_mux_eol_phi_fu_196_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter1_axi_last_V_2_reg_204, "ap_phi_reg_pp1_iter1_axi_last_V_2_reg_204");
    sc_trace(mVcdFile, ap_phi_mux_p_Val2_s_phi_fu_221_p4, "ap_phi_mux_p_Val2_s_phi_fu_221_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter1_p_Val2_s_reg_217, "ap_phi_reg_pp1_iter1_p_Val2_s_reg_217");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, eol_2_reg_253, "eol_2_reg_253");
    sc_trace(mVcdFile, AXI_video_strm_V_id_V0_update, "AXI_video_strm_V_id_V0_update");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, sof_1_fu_80, "sof_1_fu_80");
    sc_trace(mVcdFile, tmp_user_V_fu_273_p1, "tmp_user_V_fu_273_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_condition_274, "ap_condition_274");
    sc_trace(mVcdFile, ap_condition_234, "ap_condition_234");
#endif

    }
}

AXIvideo2Mat::~AXIvideo2Mat() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void AXIvideo2Mat::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(exitcond_fu_293_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(exitcond6_fu_282_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if (((esl_seteq<1,1,1>(exitcond6_fu_282_p2.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
                    (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter1_state6.read())))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter1_state6.read()))) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if ((esl_seteq<1,1,1>(exitcond6_fu_282_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        axi_data_V1_reg_138 = tmp_data_V_reg_350.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        axi_data_V1_reg_138 = axi_data_V_3_reg_241.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        axi_data_V_1_reg_181 = p_Val2_s_reg_217.read();
    } else if ((esl_seteq<1,1,1>(exitcond6_fu_282_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        axi_data_V_1_reg_181 = axi_data_V1_reg_138.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        axi_data_V_3_reg_241 = axi_data_V_1_reg_181.read();
    } else if ((!(esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V0_status.read())) && 
                esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        axi_data_V_3_reg_241 = AXI_video_strm_V_data_V_dout.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        axi_last_V1_reg_128 = tmp_last_V_reg_358.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        axi_last_V1_reg_128 = axi_last_V_3_reg_229.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_234.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(exitcond_reg_379.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(brmerge_fu_307_p2.read(), ap_const_lv1_1))) {
            axi_last_V_2_reg_204 = ap_phi_mux_eol_1_phi_fu_173_p4.read();
        } else if ((esl_seteq<1,1,1>(exitcond_reg_379.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_307_p2.read()))) {
            axi_last_V_2_reg_204 = AXI_video_strm_V_last_V_dout.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            axi_last_V_2_reg_204 = ap_phi_reg_pp1_iter1_axi_last_V_2_reg_204.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        axi_last_V_3_reg_229 = eol_1_reg_170.read();
    } else if ((!(esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V0_status.read())) && 
                esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        axi_last_V_3_reg_229 = AXI_video_strm_V_last_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        eol_1_reg_170 = axi_last_V_2_reg_204.read();
    } else if ((esl_seteq<1,1,1>(exitcond6_fu_282_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        eol_1_reg_170 = axi_last_V1_reg_128.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        eol_2_reg_253 = eol_reg_192.read();
    } else if ((!(esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V0_status.read())) && 
                esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        eol_2_reg_253 = AXI_video_strm_V_last_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        eol_reg_192 = axi_last_V_2_reg_204.read();
    } else if ((esl_seteq<1,1,1>(exitcond6_fu_282_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        eol_reg_192 = ap_const_lv1_0;
    }
    if (esl_seteq<1,1,1>(ap_condition_234.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(exitcond_reg_379.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(brmerge_fu_307_p2.read(), ap_const_lv1_1))) {
            p_Val2_s_reg_217 = ap_phi_mux_axi_data_V_1_phi_fu_184_p4.read();
        } else if ((esl_seteq<1,1,1>(exitcond_reg_379.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_307_p2.read()))) {
            p_Val2_s_reg_217 = AXI_video_strm_V_data_V_dout.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            p_Val2_s_reg_217 = ap_phi_reg_pp1_iter1_p_Val2_s_reg_217.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(exitcond_reg_379.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        sof_1_fu_80 = ap_const_lv1_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sof_1_fu_80 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_293_p2.read()))) {
        t_V_6_reg_159 = j_V_fu_298_p2.read();
    } else if ((esl_seteq<1,1,1>(exitcond6_fu_282_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        t_V_6_reg_159 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_V_reg_148 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_V_reg_148 = i_V_reg_374.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_reg_379 = exitcond_fu_293_p2.read();
        exitcond_reg_379_pp1_iter1_reg = exitcond_reg_379.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_V_reg_374 = i_V_fu_287_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(exitcond_reg_379.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        p_Result_1_reg_397 = ap_phi_mux_p_Val2_s_phi_fu_221_p4.read().range(127, 64);
        p_Result_s_reg_392 = p_Result_s_fu_313_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_id_V0_status.read()))) {
        tmp_data_V_reg_350 = AXI_video_strm_V_data_V_dout.read();
        tmp_last_V_reg_358 = AXI_video_strm_V_last_V_dout.read();
    }
}

void AXIvideo2Mat::thread_AXI_video_strm_V_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_reg_379.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_307_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0)))) {
        AXI_video_strm_V_data_V_blk_n = AXI_video_strm_V_data_V_empty_n.read();
    } else {
        AXI_video_strm_V_data_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_AXI_video_strm_V_data_V_read() {
    AXI_video_strm_V_data_V_read = AXI_video_strm_V_id_V0_update.read();
}

void AXIvideo2Mat::thread_AXI_video_strm_V_dest_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_reg_379.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_307_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0)))) {
        AXI_video_strm_V_dest_V_blk_n = AXI_video_strm_V_dest_V_empty_n.read();
    } else {
        AXI_video_strm_V_dest_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_AXI_video_strm_V_dest_V_read() {
    AXI_video_strm_V_dest_V_read = AXI_video_strm_V_id_V0_update.read();
}

void AXIvideo2Mat::thread_AXI_video_strm_V_id_V0_status() {
    AXI_video_strm_V_id_V0_status = (AXI_video_strm_V_data_V_empty_n.read() & AXI_video_strm_V_keep_V_empty_n.read() & AXI_video_strm_V_strb_V_empty_n.read() & AXI_video_strm_V_user_V_empty_n.read() & AXI_video_strm_V_last_V_empty_n.read() & AXI_video_strm_V_id_V_empty_n.read() & AXI_video_strm_V_dest_V_empty_n.read());
}

void AXIvideo2Mat::thread_AXI_video_strm_V_id_V0_update() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_id_V0_status.read())) || 
         (!(esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V0_status.read())) && 
          esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        AXI_video_strm_V_id_V0_update = ap_const_logic_1;
    } else {
        AXI_video_strm_V_id_V0_update = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_AXI_video_strm_V_id_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_reg_379.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_307_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0)))) {
        AXI_video_strm_V_id_V_blk_n = AXI_video_strm_V_id_V_empty_n.read();
    } else {
        AXI_video_strm_V_id_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_AXI_video_strm_V_id_V_read() {
    AXI_video_strm_V_id_V_read = AXI_video_strm_V_id_V0_update.read();
}

void AXIvideo2Mat::thread_AXI_video_strm_V_keep_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_reg_379.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_307_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0)))) {
        AXI_video_strm_V_keep_V_blk_n = AXI_video_strm_V_keep_V_empty_n.read();
    } else {
        AXI_video_strm_V_keep_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_AXI_video_strm_V_keep_V_read() {
    AXI_video_strm_V_keep_V_read = AXI_video_strm_V_id_V0_update.read();
}

void AXIvideo2Mat::thread_AXI_video_strm_V_last_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_reg_379.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_307_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0)))) {
        AXI_video_strm_V_last_V_blk_n = AXI_video_strm_V_last_V_empty_n.read();
    } else {
        AXI_video_strm_V_last_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_AXI_video_strm_V_last_V_read() {
    AXI_video_strm_V_last_V_read = AXI_video_strm_V_id_V0_update.read();
}

void AXIvideo2Mat::thread_AXI_video_strm_V_strb_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_reg_379.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_307_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0)))) {
        AXI_video_strm_V_strb_V_blk_n = AXI_video_strm_V_strb_V_empty_n.read();
    } else {
        AXI_video_strm_V_strb_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_AXI_video_strm_V_strb_V_read() {
    AXI_video_strm_V_strb_V_read = AXI_video_strm_V_id_V0_update.read();
}

void AXIvideo2Mat::thread_AXI_video_strm_V_user_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_reg_379.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_307_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0)))) {
        AXI_video_strm_V_user_V_blk_n = AXI_video_strm_V_user_V_empty_n.read();
    } else {
        AXI_video_strm_V_user_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_AXI_video_strm_V_user_V_read() {
    AXI_video_strm_V_user_V_read = AXI_video_strm_V_id_V0_update.read();
}

void AXIvideo2Mat::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[4];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[7];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[5];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[6];
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = ((esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V0_status.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state6.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read())))));
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = ((esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V0_status.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state6.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read())))));
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = ((esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V0_status.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state6.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read())))));
}

void AXIvideo2Mat::thread_ap_block_state5_pp1_stage0_iter0() {
    ap_block_state5_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXIvideo2Mat::thread_ap_block_state6_pp1_stage0_iter1() {
    ap_block_state6_pp1_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V0_status.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state6.read()));
}

void AXIvideo2Mat::thread_ap_block_state7_pp1_stage0_iter2() {
    ap_block_state7_pp1_stage0_iter2 = ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read())));
}

void AXIvideo2Mat::thread_ap_block_state9() {
    ap_block_state9 = (esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V0_status.read()));
}

void AXIvideo2Mat::thread_ap_condition_234() {
    ap_condition_234 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0));
}

void AXIvideo2Mat::thread_ap_condition_274() {
    ap_condition_274 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_reg_379.read(), ap_const_lv1_0));
}

void AXIvideo2Mat::thread_ap_condition_pp1_exit_iter1_state6() {
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0))) {
        ap_condition_pp1_exit_iter1_state6 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter1_state6 = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(exitcond6_fu_282_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void AXIvideo2Mat::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_axi_data_V_1_phi_fu_184_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()))) {
        ap_phi_mux_axi_data_V_1_phi_fu_184_p4 = p_Val2_s_reg_217.read();
    } else {
        ap_phi_mux_axi_data_V_1_phi_fu_184_p4 = axi_data_V_1_reg_181.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_eol_1_phi_fu_173_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()))) {
        ap_phi_mux_eol_1_phi_fu_173_p4 = axi_last_V_2_reg_204.read();
    } else {
        ap_phi_mux_eol_1_phi_fu_173_p4 = eol_1_reg_170.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_eol_2_phi_fu_256_p4() {
    ap_phi_mux_eol_2_phi_fu_256_p4 = eol_2_reg_253.read();
}

void AXIvideo2Mat::thread_ap_phi_mux_eol_phi_fu_196_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()))) {
        ap_phi_mux_eol_phi_fu_196_p4 = axi_last_V_2_reg_204.read();
    } else {
        ap_phi_mux_eol_phi_fu_196_p4 = eol_reg_192.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_p_Val2_s_phi_fu_221_p4() {
    if (esl_seteq<1,1,1>(ap_condition_274.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(brmerge_fu_307_p2.read(), ap_const_lv1_1)) {
            ap_phi_mux_p_Val2_s_phi_fu_221_p4 = ap_phi_mux_axi_data_V_1_phi_fu_184_p4.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_307_p2.read())) {
            ap_phi_mux_p_Val2_s_phi_fu_221_p4 = AXI_video_strm_V_data_V_dout.read();
        } else {
            ap_phi_mux_p_Val2_s_phi_fu_221_p4 = ap_phi_reg_pp1_iter1_p_Val2_s_reg_217.read();
        }
    } else {
        ap_phi_mux_p_Val2_s_phi_fu_221_p4 = ap_phi_reg_pp1_iter1_p_Val2_s_reg_217.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_reg_pp1_iter1_axi_last_V_2_reg_204() {
    ap_phi_reg_pp1_iter1_axi_last_V_2_reg_204 =  (sc_lv<1>) ("X");
}

void AXIvideo2Mat::thread_ap_phi_reg_pp1_iter1_p_Val2_s_reg_217() {
    ap_phi_reg_pp1_iter1_p_Val2_s_reg_217 =  (sc_lv<128>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void AXIvideo2Mat::thread_ap_predicate_op58_read_state6() {
    ap_predicate_op58_read_state6 = (esl_seteq<1,1,1>(exitcond_reg_379.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_307_p2.read()));
}

void AXIvideo2Mat::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond6_fu_282_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_brmerge_fu_307_p2() {
    brmerge_fu_307_p2 = (sof_1_fu_80.read() | ap_phi_mux_eol_phi_fu_196_p4.read());
}

void AXIvideo2Mat::thread_exitcond6_fu_282_p2() {
    exitcond6_fu_282_p2 = (!t_V_reg_148.read().is_01() || !img_rows_V_read.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_148.read() == img_rows_V_read.read());
}

void AXIvideo2Mat::thread_exitcond_fu_293_p2() {
    exitcond_fu_293_p2 = (!t_V_6_reg_159.read().is_01() || !img_cols_V_read.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_6_reg_159.read() == img_cols_V_read.read());
}

void AXIvideo2Mat::thread_i_V_fu_287_p2() {
    i_V_fu_287_p2 = (!t_V_reg_148.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_reg_148.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void AXIvideo2Mat::thread_img_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()))) {
        img_data_stream_0_V_blk_n = img_data_stream_0_V_full_n.read();
    } else {
        img_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_img_data_stream_0_V_din() {
    img_data_stream_0_V_din = p_Result_s_reg_392.read();
}

void AXIvideo2Mat::thread_img_data_stream_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_0_V_write = ap_const_logic_1;
    } else {
        img_data_stream_0_V_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_img_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()))) {
        img_data_stream_1_V_blk_n = img_data_stream_1_V_full_n.read();
    } else {
        img_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_img_data_stream_1_V_din() {
    img_data_stream_1_V_din = p_Result_1_reg_397.read();
}

void AXIvideo2Mat::thread_img_data_stream_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_379_pp1_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_1_V_write = ap_const_logic_1;
    } else {
        img_data_stream_1_V_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_j_V_fu_298_p2() {
    j_V_fu_298_p2 = (!t_V_6_reg_159.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_6_reg_159.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void AXIvideo2Mat::thread_p_Result_s_fu_313_p1() {
    p_Result_s_fu_313_p1 = ap_phi_mux_p_Val2_s_phi_fu_221_p4.read().range(64-1, 0);
}

void AXIvideo2Mat::thread_tmp_user_V_fu_273_p1() {
    tmp_user_V_fu_273_p1 = AXI_video_strm_V_user_V_dout.read();
}

void AXIvideo2Mat::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_user_V_fu_273_p1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_id_V0_status.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_user_V_fu_273_p1.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_id_V0_status.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond6_fu_282_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 64 : 
            if ((!(esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V0_status.read())) && esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else if ((!(esl_seteq<1,1,1>(eol_2_reg_253.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V0_status.read())) && esl_seteq<1,1,1>(ap_phi_mux_eol_2_phi_fu_256_p4.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}


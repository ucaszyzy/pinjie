// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="array_mul,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.232000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=28,HLS_SYN_FF=4017,HLS_SYN_LUT=7393,HLS_VERSION=2018_2}" *)

module array_mul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_src1_axi_V_data_V_dout,
        img_src1_axi_V_data_V_empty_n,
        img_src1_axi_V_data_V_read,
        img_src1_axi_V_keep_V_dout,
        img_src1_axi_V_keep_V_empty_n,
        img_src1_axi_V_keep_V_read,
        img_src1_axi_V_strb_V_dout,
        img_src1_axi_V_strb_V_empty_n,
        img_src1_axi_V_strb_V_read,
        img_src1_axi_V_user_V_dout,
        img_src1_axi_V_user_V_empty_n,
        img_src1_axi_V_user_V_read,
        img_src1_axi_V_last_V_dout,
        img_src1_axi_V_last_V_empty_n,
        img_src1_axi_V_last_V_read,
        img_src1_axi_V_id_V_dout,
        img_src1_axi_V_id_V_empty_n,
        img_src1_axi_V_id_V_read,
        img_src1_axi_V_dest_V_dout,
        img_src1_axi_V_dest_V_empty_n,
        img_src1_axi_V_dest_V_read,
        img_src2_axi_V_data_V_dout,
        img_src2_axi_V_data_V_empty_n,
        img_src2_axi_V_data_V_read,
        img_src2_axi_V_keep_V_dout,
        img_src2_axi_V_keep_V_empty_n,
        img_src2_axi_V_keep_V_read,
        img_src2_axi_V_strb_V_dout,
        img_src2_axi_V_strb_V_empty_n,
        img_src2_axi_V_strb_V_read,
        img_src2_axi_V_user_V_dout,
        img_src2_axi_V_user_V_empty_n,
        img_src2_axi_V_user_V_read,
        img_src2_axi_V_last_V_dout,
        img_src2_axi_V_last_V_empty_n,
        img_src2_axi_V_last_V_read,
        img_src2_axi_V_id_V_dout,
        img_src2_axi_V_id_V_empty_n,
        img_src2_axi_V_id_V_read,
        img_src2_axi_V_dest_V_dout,
        img_src2_axi_V_dest_V_empty_n,
        img_src2_axi_V_dest_V_read,
        img_result_axi_V_data_V_din,
        img_result_axi_V_data_V_full_n,
        img_result_axi_V_data_V_write,
        img_result_axi_V_keep_V_din,
        img_result_axi_V_keep_V_full_n,
        img_result_axi_V_keep_V_write,
        img_result_axi_V_strb_V_din,
        img_result_axi_V_strb_V_full_n,
        img_result_axi_V_strb_V_write,
        img_result_axi_V_user_V_din,
        img_result_axi_V_user_V_full_n,
        img_result_axi_V_user_V_write,
        img_result_axi_V_last_V_din,
        img_result_axi_V_last_V_full_n,
        img_result_axi_V_last_V_write,
        img_result_axi_V_id_V_din,
        img_result_axi_V_id_V_full_n,
        img_result_axi_V_id_V_write,
        img_result_axi_V_dest_V_din,
        img_result_axi_V_dest_V_full_n,
        img_result_axi_V_dest_V_write,
        rows,
        cols
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage0 = 16'd8192;
parameter    ap_ST_fsm_state16 = 16'd16384;
parameter    ap_ST_fsm_state17 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] img_src1_axi_V_data_V_dout;
input   img_src1_axi_V_data_V_empty_n;
output   img_src1_axi_V_data_V_read;
input  [15:0] img_src1_axi_V_keep_V_dout;
input   img_src1_axi_V_keep_V_empty_n;
output   img_src1_axi_V_keep_V_read;
input  [15:0] img_src1_axi_V_strb_V_dout;
input   img_src1_axi_V_strb_V_empty_n;
output   img_src1_axi_V_strb_V_read;
input  [0:0] img_src1_axi_V_user_V_dout;
input   img_src1_axi_V_user_V_empty_n;
output   img_src1_axi_V_user_V_read;
input  [0:0] img_src1_axi_V_last_V_dout;
input   img_src1_axi_V_last_V_empty_n;
output   img_src1_axi_V_last_V_read;
input  [0:0] img_src1_axi_V_id_V_dout;
input   img_src1_axi_V_id_V_empty_n;
output   img_src1_axi_V_id_V_read;
input  [0:0] img_src1_axi_V_dest_V_dout;
input   img_src1_axi_V_dest_V_empty_n;
output   img_src1_axi_V_dest_V_read;
input  [127:0] img_src2_axi_V_data_V_dout;
input   img_src2_axi_V_data_V_empty_n;
output   img_src2_axi_V_data_V_read;
input  [15:0] img_src2_axi_V_keep_V_dout;
input   img_src2_axi_V_keep_V_empty_n;
output   img_src2_axi_V_keep_V_read;
input  [15:0] img_src2_axi_V_strb_V_dout;
input   img_src2_axi_V_strb_V_empty_n;
output   img_src2_axi_V_strb_V_read;
input  [0:0] img_src2_axi_V_user_V_dout;
input   img_src2_axi_V_user_V_empty_n;
output   img_src2_axi_V_user_V_read;
input  [0:0] img_src2_axi_V_last_V_dout;
input   img_src2_axi_V_last_V_empty_n;
output   img_src2_axi_V_last_V_read;
input  [0:0] img_src2_axi_V_id_V_dout;
input   img_src2_axi_V_id_V_empty_n;
output   img_src2_axi_V_id_V_read;
input  [0:0] img_src2_axi_V_dest_V_dout;
input   img_src2_axi_V_dest_V_empty_n;
output   img_src2_axi_V_dest_V_read;
output  [127:0] img_result_axi_V_data_V_din;
input   img_result_axi_V_data_V_full_n;
output   img_result_axi_V_data_V_write;
output  [15:0] img_result_axi_V_keep_V_din;
input   img_result_axi_V_keep_V_full_n;
output   img_result_axi_V_keep_V_write;
output  [15:0] img_result_axi_V_strb_V_din;
input   img_result_axi_V_strb_V_full_n;
output   img_result_axi_V_strb_V_write;
output  [0:0] img_result_axi_V_user_V_din;
input   img_result_axi_V_user_V_full_n;
output   img_result_axi_V_user_V_write;
output  [0:0] img_result_axi_V_last_V_din;
input   img_result_axi_V_last_V_full_n;
output   img_result_axi_V_last_V_write;
output  [0:0] img_result_axi_V_id_V_din;
input   img_result_axi_V_id_V_full_n;
output   img_result_axi_V_id_V_write;
output  [0:0] img_result_axi_V_dest_V_din;
input   img_result_axi_V_dest_V_full_n;
output   img_result_axi_V_dest_V_write;
input  [31:0] rows;
input  [31:0] cols;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_src1_axi_V_data_V_read;
reg img_src1_axi_V_keep_V_read;
reg img_src1_axi_V_strb_V_read;
reg img_src1_axi_V_user_V_read;
reg img_src1_axi_V_last_V_read;
reg img_src1_axi_V_id_V_read;
reg img_src1_axi_V_dest_V_read;
reg img_src2_axi_V_data_V_read;
reg img_src2_axi_V_keep_V_read;
reg img_src2_axi_V_strb_V_read;
reg img_src2_axi_V_user_V_read;
reg img_src2_axi_V_last_V_read;
reg img_src2_axi_V_id_V_read;
reg img_src2_axi_V_dest_V_read;
reg img_result_axi_V_data_V_write;
reg img_result_axi_V_keep_V_write;
reg img_result_axi_V_strb_V_write;
reg img_result_axi_V_user_V_write;
reg img_result_axi_V_last_V_write;
reg img_result_axi_V_id_V_write;
reg img_result_axi_V_dest_V_write;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] t_V_1_reg_257;
wire   [0:0] exitcond4_i_fu_358_p2;
wire    ap_CS_fsm_state13;
wire   [31:0] i_V_fu_363_p2;
reg   [31:0] i_V_reg_504;
wire   [0:0] exitcond_i_fu_369_p2;
reg   [0:0] exitcond_i_reg_509;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state14_pp0_stage0_iter0;
wire   [63:0] img_result5_data_str_dout;
wire    img_result5_data_str_empty_n;
reg    img_result5_data_str_read;
wire   [63:0] img_result6_data_str_dout;
wire    img_result6_data_str_empty_n;
reg    img_result6_data_str_read;
wire    img_result_data_stre_full_n;
reg    img_result_data_stre_write;
wire    img_result_data_stre_1_full_n;
reg    img_result_data_stre_1_write;
reg    ap_block_state15_pp0_stage0_iter1;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] j_V_fu_374_p2;
reg    ap_enable_reg_pp0_iter0;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state14;
wire    grp_AddWeighted_fu_268_ap_start;
wire    grp_AddWeighted_fu_268_ap_done;
wire    grp_AddWeighted_fu_268_ap_idle;
wire    grp_AddWeighted_fu_268_ap_ready;
reg   [63:0] grp_AddWeighted_fu_268_src1_data_stream_V_dout;
reg    grp_AddWeighted_fu_268_src1_data_stream_V_empty_n;
wire    grp_AddWeighted_fu_268_src1_data_stream_V_read;
reg   [63:0] grp_AddWeighted_fu_268_src2_data_stream_V_dout;
reg    grp_AddWeighted_fu_268_src2_data_stream_V_empty_n;
wire    grp_AddWeighted_fu_268_src2_data_stream_V_read;
wire   [63:0] grp_AddWeighted_fu_268_dst_data_stream_V_din;
reg    grp_AddWeighted_fu_268_dst_data_stream_V_full_n;
wire    grp_AddWeighted_fu_268_dst_data_stream_V_write;
wire    grp_Mul_fu_277_ap_start;
wire    grp_Mul_fu_277_ap_done;
wire    grp_Mul_fu_277_ap_idle;
wire    grp_Mul_fu_277_ap_ready;
wire    grp_Mul_fu_277_src1_data_stream_V_read;
reg   [63:0] grp_Mul_fu_277_src2_data_stream_V_dout;
reg    grp_Mul_fu_277_src2_data_stream_V_empty_n;
wire    grp_Mul_fu_277_src2_data_stream_V_read;
wire   [63:0] grp_Mul_fu_277_dst_data_stream_V_din;
reg    grp_Mul_fu_277_dst_data_stream_V_full_n;
wire    grp_Mul_fu_277_dst_data_stream_V_write;
wire    grp_Mul_fu_286_ap_start;
wire    grp_Mul_fu_286_ap_done;
wire    grp_Mul_fu_286_ap_idle;
wire    grp_Mul_fu_286_ap_ready;
wire    grp_Mul_fu_286_src1_data_stream_V_read;
reg   [63:0] grp_Mul_fu_286_src2_data_stream_V_dout;
reg    grp_Mul_fu_286_src2_data_stream_V_empty_n;
wire    grp_Mul_fu_286_src2_data_stream_V_read;
wire   [63:0] grp_Mul_fu_286_dst_data_stream_V_din;
reg    grp_Mul_fu_286_dst_data_stream_V_full_n;
wire    grp_Mul_fu_286_dst_data_stream_V_write;
wire    grp_AXIvideo2Mat_fu_295_ap_start;
wire    grp_AXIvideo2Mat_fu_295_ap_done;
wire    grp_AXIvideo2Mat_fu_295_ap_idle;
wire    grp_AXIvideo2Mat_fu_295_ap_ready;
reg   [127:0] grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_dout;
reg    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_empty_n;
wire    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_read;
reg   [15:0] grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_dout;
reg    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_empty_n;
wire    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_read;
reg   [15:0] grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_dout;
reg    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_empty_n;
wire    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_read;
reg   [0:0] grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_dout;
reg    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_empty_n;
wire    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_read;
reg   [0:0] grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_dout;
reg    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_empty_n;
wire    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_read;
reg   [0:0] grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_dout;
reg    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_empty_n;
wire    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_read;
reg   [0:0] grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_dout;
reg    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_empty_n;
wire    grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_read;
wire   [63:0] grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_din;
reg    grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_full_n;
wire    grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_write;
wire   [63:0] grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_din;
reg    grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_full_n;
wire    grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_write;
wire    grp_Mat2AXIvideo_fu_326_ap_start;
wire    grp_Mat2AXIvideo_fu_326_ap_done;
wire    grp_Mat2AXIvideo_fu_326_ap_idle;
wire    grp_Mat2AXIvideo_fu_326_ap_ready;
wire    grp_Mat2AXIvideo_fu_326_img_data_stream_0_V_read;
wire    grp_Mat2AXIvideo_fu_326_img_data_stream_1_V_read;
wire   [127:0] grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_data_V_din;
wire    grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_data_V_write;
wire   [15:0] grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_keep_V_din;
wire    grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_keep_V_write;
wire   [15:0] grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_strb_V_din;
wire    grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_strb_V_write;
wire   [0:0] grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_user_V_din;
wire    grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_user_V_write;
wire   [0:0] grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_last_V_din;
wire    grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_last_V_write;
wire   [0:0] grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_id_V_din;
wire    grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_id_V_write;
wire   [0:0] grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_dest_V_din;
wire    grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_dest_V_write;
wire    grp_Split_fu_348_ap_start;
wire    grp_Split_fu_348_ap_done;
wire    grp_Split_fu_348_ap_idle;
wire    grp_Split_fu_348_ap_ready;
reg   [63:0] grp_Split_fu_348_src_data_stream_0_V_dout;
reg    grp_Split_fu_348_src_data_stream_0_V_empty_n;
wire    grp_Split_fu_348_src_data_stream_0_V_read;
reg   [63:0] grp_Split_fu_348_src_data_stream_1_V_dout;
reg    grp_Split_fu_348_src_data_stream_1_V_empty_n;
wire    grp_Split_fu_348_src_data_stream_1_V_read;
wire   [63:0] grp_Split_fu_348_dst0_data_stream_V_din;
reg    grp_Split_fu_348_dst0_data_stream_V_full_n;
wire    grp_Split_fu_348_dst0_data_stream_V_write;
wire   [63:0] grp_Split_fu_348_dst1_data_stream_V_din;
reg    grp_Split_fu_348_dst1_data_stream_V_full_n;
wire    grp_Split_fu_348_dst1_data_stream_V_write;
reg   [31:0] t_V_reg_246;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state16;
reg    grp_AddWeighted_fu_268_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state10;
wire   [63:0] img_result1_data_str_dout;
wire    img_result1_data_str_empty_n;
reg    img_result1_data_str_read;
wire   [63:0] img_result4_data_str_dout;
wire    img_result4_data_str_empty_n;
reg    img_result4_data_str_read;
wire   [63:0] img_result2_data_str_dout;
wire    img_result2_data_str_empty_n;
reg    img_result2_data_str_read;
wire   [63:0] img_result3_data_str_dout;
wire    img_result3_data_str_empty_n;
reg    img_result3_data_str_read;
wire    img_result5_data_str_full_n;
reg    img_result5_data_str_write;
wire    img_result6_data_str_full_n;
reg    img_result6_data_str_write;
reg    grp_Mul_fu_277_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [63:0] img1_Re_data_stream_s_dout;
wire    img1_Re_data_stream_s_empty_n;
reg    img1_Re_data_stream_s_read;
wire   [63:0] img2_Re_data_stream_s_dout;
wire    img2_Re_data_stream_s_empty_n;
reg    img2_Re_data_stream_s_read;
wire   [63:0] img2_Im_data_stream_s_dout;
wire    img2_Im_data_stream_s_empty_n;
reg    img2_Im_data_stream_s_read;
wire    img_result1_data_str_full_n;
reg    img_result1_data_str_write;
wire    img_result3_data_str_full_n;
reg    img_result3_data_str_write;
reg    grp_Mul_fu_286_ap_start_reg;
wire   [63:0] img1_Im_data_stream_s_dout;
wire    img1_Im_data_stream_s_empty_n;
reg    img1_Im_data_stream_s_read;
wire    img_result2_data_str_full_n;
reg    img_result2_data_str_write;
wire    img_result4_data_str_full_n;
reg    img_result4_data_str_write;
reg    grp_AXIvideo2Mat_fu_295_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
wire    img1_data_stream_0_s_full_n;
reg    img1_data_stream_0_s_write;
wire    img2_data_stream_0_s_full_n;
reg    img2_data_stream_0_s_write;
wire    img1_data_stream_1_s_full_n;
reg    img1_data_stream_1_s_write;
wire    img2_data_stream_1_s_full_n;
reg    img2_data_stream_1_s_write;
reg    grp_Mat2AXIvideo_fu_326_ap_start_reg;
wire    ap_CS_fsm_state17;
wire   [63:0] img_result_data_stre_dout;
wire    img_result_data_stre_empty_n;
reg    img_result_data_stre_read;
wire   [63:0] img_result_data_stre_1_dout;
wire    img_result_data_stre_1_empty_n;
reg    img_result_data_stre_1_read;
reg    grp_Split_fu_348_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [63:0] img1_data_stream_0_s_dout;
wire    img1_data_stream_0_s_empty_n;
reg    img1_data_stream_0_s_read;
wire   [63:0] img2_data_stream_0_s_dout;
wire    img2_data_stream_0_s_empty_n;
reg    img2_data_stream_0_s_read;
wire   [63:0] img1_data_stream_1_s_dout;
wire    img1_data_stream_1_s_empty_n;
reg    img1_data_stream_1_s_read;
wire   [63:0] img2_data_stream_1_s_dout;
wire    img2_data_stream_1_s_empty_n;
reg    img2_data_stream_1_s_read;
wire    img1_Re_data_stream_s_full_n;
reg    img1_Re_data_stream_s_write;
wire    img2_Re_data_stream_s_full_n;
reg    img2_Re_data_stream_s_write;
wire    img1_Im_data_stream_s_full_n;
reg    img1_Im_data_stream_s_write;
wire    img2_Im_data_stream_s_full_n;
reg    img2_Im_data_stream_s_write;
reg    ap_block_pp0_stage0_01001;
wire    ap_block_pp0_stage0;
reg   [15:0] ap_NS_fsm;
reg    ap_block_state4_on_subcall_done;
reg    ap_block_state8_on_subcall_done;
reg    ap_block_state10_on_subcall_done;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 grp_AddWeighted_fu_268_ap_start_reg = 1'b0;
#0 grp_Mul_fu_277_ap_start_reg = 1'b0;
#0 grp_Mul_fu_286_ap_start_reg = 1'b0;
#0 grp_AXIvideo2Mat_fu_295_ap_start_reg = 1'b0;
#0 grp_Mat2AXIvideo_fu_326_ap_start_reg = 1'b0;
#0 grp_Split_fu_348_ap_start_reg = 1'b0;
end

AddWeighted grp_AddWeighted_fu_268(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_AddWeighted_fu_268_ap_start),
    .ap_done(grp_AddWeighted_fu_268_ap_done),
    .ap_idle(grp_AddWeighted_fu_268_ap_idle),
    .ap_ready(grp_AddWeighted_fu_268_ap_ready),
    .src1_rows_V_read(rows),
    .src1_cols_V_read(cols),
    .src1_data_stream_V_dout(grp_AddWeighted_fu_268_src1_data_stream_V_dout),
    .src1_data_stream_V_empty_n(grp_AddWeighted_fu_268_src1_data_stream_V_empty_n),
    .src1_data_stream_V_read(grp_AddWeighted_fu_268_src1_data_stream_V_read),
    .src2_data_stream_V_dout(grp_AddWeighted_fu_268_src2_data_stream_V_dout),
    .src2_data_stream_V_empty_n(grp_AddWeighted_fu_268_src2_data_stream_V_empty_n),
    .src2_data_stream_V_read(grp_AddWeighted_fu_268_src2_data_stream_V_read),
    .dst_data_stream_V_din(grp_AddWeighted_fu_268_dst_data_stream_V_din),
    .dst_data_stream_V_full_n(grp_AddWeighted_fu_268_dst_data_stream_V_full_n),
    .dst_data_stream_V_write(grp_AddWeighted_fu_268_dst_data_stream_V_write)
);

Mul grp_Mul_fu_277(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Mul_fu_277_ap_start),
    .ap_done(grp_Mul_fu_277_ap_done),
    .ap_idle(grp_Mul_fu_277_ap_idle),
    .ap_ready(grp_Mul_fu_277_ap_ready),
    .src1_rows_V_read(rows),
    .src1_cols_V_read(cols),
    .src1_data_stream_V_dout(img1_Re_data_stream_s_dout),
    .src1_data_stream_V_empty_n(img1_Re_data_stream_s_empty_n),
    .src1_data_stream_V_read(grp_Mul_fu_277_src1_data_stream_V_read),
    .src2_data_stream_V_dout(grp_Mul_fu_277_src2_data_stream_V_dout),
    .src2_data_stream_V_empty_n(grp_Mul_fu_277_src2_data_stream_V_empty_n),
    .src2_data_stream_V_read(grp_Mul_fu_277_src2_data_stream_V_read),
    .dst_data_stream_V_din(grp_Mul_fu_277_dst_data_stream_V_din),
    .dst_data_stream_V_full_n(grp_Mul_fu_277_dst_data_stream_V_full_n),
    .dst_data_stream_V_write(grp_Mul_fu_277_dst_data_stream_V_write)
);

Mul grp_Mul_fu_286(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Mul_fu_286_ap_start),
    .ap_done(grp_Mul_fu_286_ap_done),
    .ap_idle(grp_Mul_fu_286_ap_idle),
    .ap_ready(grp_Mul_fu_286_ap_ready),
    .src1_rows_V_read(rows),
    .src1_cols_V_read(cols),
    .src1_data_stream_V_dout(img1_Im_data_stream_s_dout),
    .src1_data_stream_V_empty_n(img1_Im_data_stream_s_empty_n),
    .src1_data_stream_V_read(grp_Mul_fu_286_src1_data_stream_V_read),
    .src2_data_stream_V_dout(grp_Mul_fu_286_src2_data_stream_V_dout),
    .src2_data_stream_V_empty_n(grp_Mul_fu_286_src2_data_stream_V_empty_n),
    .src2_data_stream_V_read(grp_Mul_fu_286_src2_data_stream_V_read),
    .dst_data_stream_V_din(grp_Mul_fu_286_dst_data_stream_V_din),
    .dst_data_stream_V_full_n(grp_Mul_fu_286_dst_data_stream_V_full_n),
    .dst_data_stream_V_write(grp_Mul_fu_286_dst_data_stream_V_write)
);

AXIvideo2Mat grp_AXIvideo2Mat_fu_295(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_AXIvideo2Mat_fu_295_ap_start),
    .ap_done(grp_AXIvideo2Mat_fu_295_ap_done),
    .ap_idle(grp_AXIvideo2Mat_fu_295_ap_idle),
    .ap_ready(grp_AXIvideo2Mat_fu_295_ap_ready),
    .AXI_video_strm_V_data_V_dout(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_dout),
    .AXI_video_strm_V_data_V_empty_n(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_empty_n),
    .AXI_video_strm_V_data_V_read(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_read),
    .AXI_video_strm_V_keep_V_dout(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_dout),
    .AXI_video_strm_V_keep_V_empty_n(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_empty_n),
    .AXI_video_strm_V_keep_V_read(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_read),
    .AXI_video_strm_V_strb_V_dout(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_dout),
    .AXI_video_strm_V_strb_V_empty_n(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_empty_n),
    .AXI_video_strm_V_strb_V_read(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_read),
    .AXI_video_strm_V_user_V_dout(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_dout),
    .AXI_video_strm_V_user_V_empty_n(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_empty_n),
    .AXI_video_strm_V_user_V_read(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_read),
    .AXI_video_strm_V_last_V_dout(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_dout),
    .AXI_video_strm_V_last_V_empty_n(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_empty_n),
    .AXI_video_strm_V_last_V_read(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_read),
    .AXI_video_strm_V_id_V_dout(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_dout),
    .AXI_video_strm_V_id_V_empty_n(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_empty_n),
    .AXI_video_strm_V_id_V_read(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_read),
    .AXI_video_strm_V_dest_V_dout(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_dout),
    .AXI_video_strm_V_dest_V_empty_n(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_empty_n),
    .AXI_video_strm_V_dest_V_read(grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_read),
    .img_rows_V_read(rows),
    .img_cols_V_read(cols),
    .img_data_stream_0_V_din(grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_din),
    .img_data_stream_0_V_full_n(grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_full_n),
    .img_data_stream_0_V_write(grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_write),
    .img_data_stream_1_V_din(grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_din),
    .img_data_stream_1_V_full_n(grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_full_n),
    .img_data_stream_1_V_write(grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_write)
);

Mat2AXIvideo grp_Mat2AXIvideo_fu_326(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Mat2AXIvideo_fu_326_ap_start),
    .ap_done(grp_Mat2AXIvideo_fu_326_ap_done),
    .ap_idle(grp_Mat2AXIvideo_fu_326_ap_idle),
    .ap_ready(grp_Mat2AXIvideo_fu_326_ap_ready),
    .img_rows_V_read(rows),
    .img_cols_V_read(cols),
    .img_data_stream_0_V_dout(img_result_data_stre_dout),
    .img_data_stream_0_V_empty_n(img_result_data_stre_empty_n),
    .img_data_stream_0_V_read(grp_Mat2AXIvideo_fu_326_img_data_stream_0_V_read),
    .img_data_stream_1_V_dout(img_result_data_stre_1_dout),
    .img_data_stream_1_V_empty_n(img_result_data_stre_1_empty_n),
    .img_data_stream_1_V_read(grp_Mat2AXIvideo_fu_326_img_data_stream_1_V_read),
    .AXI_video_strm_V_data_V_din(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_data_V_din),
    .AXI_video_strm_V_data_V_full_n(img_result_axi_V_data_V_full_n),
    .AXI_video_strm_V_data_V_write(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_data_V_write),
    .AXI_video_strm_V_keep_V_din(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_keep_V_din),
    .AXI_video_strm_V_keep_V_full_n(img_result_axi_V_keep_V_full_n),
    .AXI_video_strm_V_keep_V_write(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_keep_V_write),
    .AXI_video_strm_V_strb_V_din(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_strb_V_din),
    .AXI_video_strm_V_strb_V_full_n(img_result_axi_V_strb_V_full_n),
    .AXI_video_strm_V_strb_V_write(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_strb_V_write),
    .AXI_video_strm_V_user_V_din(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_user_V_din),
    .AXI_video_strm_V_user_V_full_n(img_result_axi_V_user_V_full_n),
    .AXI_video_strm_V_user_V_write(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_user_V_write),
    .AXI_video_strm_V_last_V_din(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_last_V_din),
    .AXI_video_strm_V_last_V_full_n(img_result_axi_V_last_V_full_n),
    .AXI_video_strm_V_last_V_write(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_last_V_write),
    .AXI_video_strm_V_id_V_din(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_id_V_din),
    .AXI_video_strm_V_id_V_full_n(img_result_axi_V_id_V_full_n),
    .AXI_video_strm_V_id_V_write(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_id_V_write),
    .AXI_video_strm_V_dest_V_din(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_dest_V_din),
    .AXI_video_strm_V_dest_V_full_n(img_result_axi_V_dest_V_full_n),
    .AXI_video_strm_V_dest_V_write(grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_dest_V_write)
);

Split grp_Split_fu_348(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Split_fu_348_ap_start),
    .ap_done(grp_Split_fu_348_ap_done),
    .ap_idle(grp_Split_fu_348_ap_idle),
    .ap_ready(grp_Split_fu_348_ap_ready),
    .src_rows_V_read(rows),
    .src_cols_V_read(cols),
    .src_data_stream_0_V_dout(grp_Split_fu_348_src_data_stream_0_V_dout),
    .src_data_stream_0_V_empty_n(grp_Split_fu_348_src_data_stream_0_V_empty_n),
    .src_data_stream_0_V_read(grp_Split_fu_348_src_data_stream_0_V_read),
    .src_data_stream_1_V_dout(grp_Split_fu_348_src_data_stream_1_V_dout),
    .src_data_stream_1_V_empty_n(grp_Split_fu_348_src_data_stream_1_V_empty_n),
    .src_data_stream_1_V_read(grp_Split_fu_348_src_data_stream_1_V_read),
    .dst0_data_stream_V_din(grp_Split_fu_348_dst0_data_stream_V_din),
    .dst0_data_stream_V_full_n(grp_Split_fu_348_dst0_data_stream_V_full_n),
    .dst0_data_stream_V_write(grp_Split_fu_348_dst0_data_stream_V_write),
    .dst1_data_stream_V_din(grp_Split_fu_348_dst1_data_stream_V_din),
    .dst1_data_stream_V_full_n(grp_Split_fu_348_dst1_data_stream_V_full_n),
    .dst1_data_stream_V_write(grp_Split_fu_348_dst1_data_stream_V_write)
);

fifo_w64_d4_A img1_data_stream_0_s_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_din),
    .if_full_n(img1_data_stream_0_s_full_n),
    .if_write(img1_data_stream_0_s_write),
    .if_dout(img1_data_stream_0_s_dout),
    .if_empty_n(img1_data_stream_0_s_empty_n),
    .if_read(img1_data_stream_0_s_read)
);

fifo_w64_d4_A img1_data_stream_1_s_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_din),
    .if_full_n(img1_data_stream_1_s_full_n),
    .if_write(img1_data_stream_1_s_write),
    .if_dout(img1_data_stream_1_s_dout),
    .if_empty_n(img1_data_stream_1_s_empty_n),
    .if_read(img1_data_stream_1_s_read)
);

fifo_w64_d4_A img2_data_stream_0_s_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_din),
    .if_full_n(img2_data_stream_0_s_full_n),
    .if_write(img2_data_stream_0_s_write),
    .if_dout(img2_data_stream_0_s_dout),
    .if_empty_n(img2_data_stream_0_s_empty_n),
    .if_read(img2_data_stream_0_s_read)
);

fifo_w64_d4_A img2_data_stream_1_s_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_din),
    .if_full_n(img2_data_stream_1_s_full_n),
    .if_write(img2_data_stream_1_s_write),
    .if_dout(img2_data_stream_1_s_dout),
    .if_empty_n(img2_data_stream_1_s_empty_n),
    .if_read(img2_data_stream_1_s_read)
);

fifo_w64_d4_A img1_Re_data_stream_s_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_Split_fu_348_dst0_data_stream_V_din),
    .if_full_n(img1_Re_data_stream_s_full_n),
    .if_write(img1_Re_data_stream_s_write),
    .if_dout(img1_Re_data_stream_s_dout),
    .if_empty_n(img1_Re_data_stream_s_empty_n),
    .if_read(img1_Re_data_stream_s_read)
);

fifo_w64_d4_A img1_Im_data_stream_s_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_Split_fu_348_dst1_data_stream_V_din),
    .if_full_n(img1_Im_data_stream_s_full_n),
    .if_write(img1_Im_data_stream_s_write),
    .if_dout(img1_Im_data_stream_s_dout),
    .if_empty_n(img1_Im_data_stream_s_empty_n),
    .if_read(img1_Im_data_stream_s_read)
);

fifo_w64_d4_A img2_Re_data_stream_s_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_Split_fu_348_dst0_data_stream_V_din),
    .if_full_n(img2_Re_data_stream_s_full_n),
    .if_write(img2_Re_data_stream_s_write),
    .if_dout(img2_Re_data_stream_s_dout),
    .if_empty_n(img2_Re_data_stream_s_empty_n),
    .if_read(img2_Re_data_stream_s_read)
);

fifo_w64_d4_A img2_Im_data_stream_s_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_Split_fu_348_dst1_data_stream_V_din),
    .if_full_n(img2_Im_data_stream_s_full_n),
    .if_write(img2_Im_data_stream_s_write),
    .if_dout(img2_Im_data_stream_s_dout),
    .if_empty_n(img2_Im_data_stream_s_empty_n),
    .if_read(img2_Im_data_stream_s_read)
);

fifo_w64_d4_A img_result_data_stre_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(img_result5_data_str_dout),
    .if_full_n(img_result_data_stre_full_n),
    .if_write(img_result_data_stre_write),
    .if_dout(img_result_data_stre_dout),
    .if_empty_n(img_result_data_stre_empty_n),
    .if_read(img_result_data_stre_read)
);

fifo_w64_d4_A img_result_data_stre_1_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(img_result6_data_str_dout),
    .if_full_n(img_result_data_stre_1_full_n),
    .if_write(img_result_data_stre_1_write),
    .if_dout(img_result_data_stre_1_dout),
    .if_empty_n(img_result_data_stre_1_empty_n),
    .if_read(img_result_data_stre_1_read)
);

fifo_w64_d4_A img_result1_data_str_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_Mul_fu_277_dst_data_stream_V_din),
    .if_full_n(img_result1_data_str_full_n),
    .if_write(img_result1_data_str_write),
    .if_dout(img_result1_data_str_dout),
    .if_empty_n(img_result1_data_str_empty_n),
    .if_read(img_result1_data_str_read)
);

fifo_w64_d4_A img_result2_data_str_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_Mul_fu_286_dst_data_stream_V_din),
    .if_full_n(img_result2_data_str_full_n),
    .if_write(img_result2_data_str_write),
    .if_dout(img_result2_data_str_dout),
    .if_empty_n(img_result2_data_str_empty_n),
    .if_read(img_result2_data_str_read)
);

fifo_w64_d4_A img_result3_data_str_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_Mul_fu_277_dst_data_stream_V_din),
    .if_full_n(img_result3_data_str_full_n),
    .if_write(img_result3_data_str_write),
    .if_dout(img_result3_data_str_dout),
    .if_empty_n(img_result3_data_str_empty_n),
    .if_read(img_result3_data_str_read)
);

fifo_w64_d4_A img_result4_data_str_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_Mul_fu_286_dst_data_stream_V_din),
    .if_full_n(img_result4_data_str_full_n),
    .if_write(img_result4_data_str_write),
    .if_dout(img_result4_data_str_dout),
    .if_empty_n(img_result4_data_str_empty_n),
    .if_read(img_result4_data_str_read)
);

fifo_w64_d4_A img_result5_data_str_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_AddWeighted_fu_268_dst_data_stream_V_din),
    .if_full_n(img_result5_data_str_full_n),
    .if_write(img_result5_data_str_write),
    .if_dout(img_result5_data_str_dout),
    .if_empty_n(img_result5_data_str_empty_n),
    .if_read(img_result5_data_str_read)
);

fifo_w64_d4_A img_result6_data_str_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_AddWeighted_fu_268_dst_data_stream_V_din),
    .if_full_n(img_result6_data_str_full_n),
    .if_write(img_result6_data_str_write),
    .if_dout(img_result6_data_str_dout),
    .if_empty_n(img_result6_data_str_empty_n),
    .if_read(img_result6_data_str_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state13) & (exitcond4_i_fu_358_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state14) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state14);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state13) & (exitcond4_i_fu_358_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_AXIvideo2Mat_fu_295_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_AXIvideo2Mat_fu_295_ap_start_reg <= 1'b1;
        end else if ((grp_AXIvideo2Mat_fu_295_ap_ready == 1'b1)) begin
            grp_AXIvideo2Mat_fu_295_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_AddWeighted_fu_268_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
            grp_AddWeighted_fu_268_ap_start_reg <= 1'b1;
        end else if ((grp_AddWeighted_fu_268_ap_ready == 1'b1)) begin
            grp_AddWeighted_fu_268_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Mat2AXIvideo_fu_326_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state13) & (exitcond4_i_fu_358_p2 == 1'd1))) begin
            grp_Mat2AXIvideo_fu_326_ap_start_reg <= 1'b1;
        end else if ((grp_Mat2AXIvideo_fu_326_ap_ready == 1'b1)) begin
            grp_Mat2AXIvideo_fu_326_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Mul_fu_277_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9))) begin
            grp_Mul_fu_277_ap_start_reg <= 1'b1;
        end else if ((grp_Mul_fu_277_ap_ready == 1'b1)) begin
            grp_Mul_fu_277_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Mul_fu_286_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9))) begin
            grp_Mul_fu_286_ap_start_reg <= 1'b1;
        end else if ((grp_Mul_fu_286_ap_ready == 1'b1)) begin
            grp_Mul_fu_286_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Split_fu_348_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
            grp_Split_fu_348_ap_start_reg <= 1'b1;
        end else if ((grp_Split_fu_348_ap_ready == 1'b1)) begin
            grp_Split_fu_348_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_i_fu_369_p2 == 1'd0))) begin
        t_V_1_reg_257 <= j_V_fu_374_p2;
    end else if (((1'b1 == ap_CS_fsm_state13) & (exitcond4_i_fu_358_p2 == 1'd0))) begin
        t_V_1_reg_257 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        t_V_reg_246 <= i_V_reg_504;
    end else if (((grp_AddWeighted_fu_268_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        t_V_reg_246 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_i_reg_509 <= exitcond_i_fu_369_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_V_reg_504 <= i_V_fu_363_p2;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_369_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Mat2AXIvideo_fu_326_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Mat2AXIvideo_fu_326_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_dout = img_src2_axi_V_data_V_dout;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_dout = img_src1_axi_V_data_V_dout;
    end else begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_dout = img_src2_axi_V_data_V_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_empty_n = img_src2_axi_V_data_V_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_empty_n = img_src1_axi_V_data_V_empty_n;
    end else begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_empty_n = img_src2_axi_V_data_V_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_dout = img_src2_axi_V_dest_V_dout;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_dout = img_src1_axi_V_dest_V_dout;
    end else begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_dout = img_src2_axi_V_dest_V_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_empty_n = img_src2_axi_V_dest_V_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_empty_n = img_src1_axi_V_dest_V_empty_n;
    end else begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_empty_n = img_src2_axi_V_dest_V_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_dout = img_src2_axi_V_id_V_dout;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_dout = img_src1_axi_V_id_V_dout;
    end else begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_dout = img_src2_axi_V_id_V_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_empty_n = img_src2_axi_V_id_V_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_empty_n = img_src1_axi_V_id_V_empty_n;
    end else begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_empty_n = img_src2_axi_V_id_V_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_dout = img_src2_axi_V_keep_V_dout;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_dout = img_src1_axi_V_keep_V_dout;
    end else begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_dout = img_src2_axi_V_keep_V_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_empty_n = img_src2_axi_V_keep_V_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_empty_n = img_src1_axi_V_keep_V_empty_n;
    end else begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_empty_n = img_src2_axi_V_keep_V_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_dout = img_src2_axi_V_last_V_dout;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_dout = img_src1_axi_V_last_V_dout;
    end else begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_dout = img_src2_axi_V_last_V_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_empty_n = img_src2_axi_V_last_V_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_empty_n = img_src1_axi_V_last_V_empty_n;
    end else begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_empty_n = img_src2_axi_V_last_V_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_dout = img_src2_axi_V_strb_V_dout;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_dout = img_src1_axi_V_strb_V_dout;
    end else begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_dout = img_src2_axi_V_strb_V_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_empty_n = img_src2_axi_V_strb_V_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_empty_n = img_src1_axi_V_strb_V_empty_n;
    end else begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_empty_n = img_src2_axi_V_strb_V_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_dout = img_src2_axi_V_user_V_dout;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_dout = img_src1_axi_V_user_V_dout;
    end else begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_dout = img_src2_axi_V_user_V_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_empty_n = img_src2_axi_V_user_V_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_empty_n = img_src1_axi_V_user_V_empty_n;
    end else begin
        grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_empty_n = img_src2_axi_V_user_V_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_full_n = img2_data_stream_0_s_full_n;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_full_n = img1_data_stream_0_s_full_n;
    end else begin
        grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_full_n = img2_data_stream_0_s_full_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_full_n = img2_data_stream_1_s_full_n;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_full_n = img1_data_stream_1_s_full_n;
    end else begin
        grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_full_n = img2_data_stream_1_s_full_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_AddWeighted_fu_268_dst_data_stream_V_full_n = img_result6_data_str_full_n;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_AddWeighted_fu_268_dst_data_stream_V_full_n = img_result5_data_str_full_n;
    end else begin
        grp_AddWeighted_fu_268_dst_data_stream_V_full_n = img_result6_data_str_full_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_AddWeighted_fu_268_src1_data_stream_V_dout = img_result4_data_str_dout;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_AddWeighted_fu_268_src1_data_stream_V_dout = img_result1_data_str_dout;
    end else begin
        grp_AddWeighted_fu_268_src1_data_stream_V_dout = img_result4_data_str_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_AddWeighted_fu_268_src1_data_stream_V_empty_n = img_result4_data_str_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_AddWeighted_fu_268_src1_data_stream_V_empty_n = img_result1_data_str_empty_n;
    end else begin
        grp_AddWeighted_fu_268_src1_data_stream_V_empty_n = img_result4_data_str_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_AddWeighted_fu_268_src2_data_stream_V_dout = img_result3_data_str_dout;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_AddWeighted_fu_268_src2_data_stream_V_dout = img_result2_data_str_dout;
    end else begin
        grp_AddWeighted_fu_268_src2_data_stream_V_dout = img_result3_data_str_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_AddWeighted_fu_268_src2_data_stream_V_empty_n = img_result3_data_str_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_AddWeighted_fu_268_src2_data_stream_V_empty_n = img_result2_data_str_empty_n;
    end else begin
        grp_AddWeighted_fu_268_src2_data_stream_V_empty_n = img_result3_data_str_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_Mul_fu_277_dst_data_stream_V_full_n = img_result3_data_str_full_n;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_Mul_fu_277_dst_data_stream_V_full_n = img_result1_data_str_full_n;
    end else begin
        grp_Mul_fu_277_dst_data_stream_V_full_n = img_result3_data_str_full_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_Mul_fu_277_src2_data_stream_V_dout = img2_Im_data_stream_s_dout;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_Mul_fu_277_src2_data_stream_V_dout = img2_Re_data_stream_s_dout;
    end else begin
        grp_Mul_fu_277_src2_data_stream_V_dout = img2_Im_data_stream_s_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_Mul_fu_277_src2_data_stream_V_empty_n = img2_Im_data_stream_s_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_Mul_fu_277_src2_data_stream_V_empty_n = img2_Re_data_stream_s_empty_n;
    end else begin
        grp_Mul_fu_277_src2_data_stream_V_empty_n = img2_Im_data_stream_s_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_Mul_fu_286_dst_data_stream_V_full_n = img_result4_data_str_full_n;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_Mul_fu_286_dst_data_stream_V_full_n = img_result2_data_str_full_n;
    end else begin
        grp_Mul_fu_286_dst_data_stream_V_full_n = img_result4_data_str_full_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_Mul_fu_286_src2_data_stream_V_dout = img2_Re_data_stream_s_dout;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_Mul_fu_286_src2_data_stream_V_dout = img2_Im_data_stream_s_dout;
    end else begin
        grp_Mul_fu_286_src2_data_stream_V_dout = img2_Re_data_stream_s_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_Mul_fu_286_src2_data_stream_V_empty_n = img2_Re_data_stream_s_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_Mul_fu_286_src2_data_stream_V_empty_n = img2_Im_data_stream_s_empty_n;
    end else begin
        grp_Mul_fu_286_src2_data_stream_V_empty_n = img2_Re_data_stream_s_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_Split_fu_348_dst0_data_stream_V_full_n = img2_Re_data_stream_s_full_n;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_Split_fu_348_dst0_data_stream_V_full_n = img1_Re_data_stream_s_full_n;
    end else begin
        grp_Split_fu_348_dst0_data_stream_V_full_n = img2_Re_data_stream_s_full_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_Split_fu_348_dst1_data_stream_V_full_n = img2_Im_data_stream_s_full_n;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_Split_fu_348_dst1_data_stream_V_full_n = img1_Im_data_stream_s_full_n;
    end else begin
        grp_Split_fu_348_dst1_data_stream_V_full_n = img2_Im_data_stream_s_full_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_Split_fu_348_src_data_stream_0_V_dout = img2_data_stream_0_s_dout;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_Split_fu_348_src_data_stream_0_V_dout = img1_data_stream_0_s_dout;
    end else begin
        grp_Split_fu_348_src_data_stream_0_V_dout = img2_data_stream_0_s_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_Split_fu_348_src_data_stream_0_V_empty_n = img2_data_stream_0_s_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_Split_fu_348_src_data_stream_0_V_empty_n = img1_data_stream_0_s_empty_n;
    end else begin
        grp_Split_fu_348_src_data_stream_0_V_empty_n = img2_data_stream_0_s_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_Split_fu_348_src_data_stream_1_V_dout = img2_data_stream_1_s_dout;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_Split_fu_348_src_data_stream_1_V_dout = img1_data_stream_1_s_dout;
    end else begin
        grp_Split_fu_348_src_data_stream_1_V_dout = img2_data_stream_1_s_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_Split_fu_348_src_data_stream_1_V_empty_n = img2_data_stream_1_s_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_Split_fu_348_src_data_stream_1_V_empty_n = img1_data_stream_1_s_empty_n;
    end else begin
        grp_Split_fu_348_src_data_stream_1_V_empty_n = img2_data_stream_1_s_empty_n;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10))) begin
        img1_Im_data_stream_s_read = grp_Mul_fu_286_src1_data_stream_V_read;
    end else begin
        img1_Im_data_stream_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        img1_Im_data_stream_s_write = grp_Split_fu_348_dst1_data_stream_V_write;
    end else begin
        img1_Im_data_stream_s_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10))) begin
        img1_Re_data_stream_s_read = grp_Mul_fu_277_src1_data_stream_V_read;
    end else begin
        img1_Re_data_stream_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        img1_Re_data_stream_s_write = grp_Split_fu_348_dst0_data_stream_V_write;
    end else begin
        img1_Re_data_stream_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        img1_data_stream_0_s_read = grp_Split_fu_348_src_data_stream_0_V_read;
    end else begin
        img1_data_stream_0_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        img1_data_stream_0_s_write = grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_write;
    end else begin
        img1_data_stream_0_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        img1_data_stream_1_s_read = grp_Split_fu_348_src_data_stream_1_V_read;
    end else begin
        img1_data_stream_1_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        img1_data_stream_1_s_write = grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_write;
    end else begin
        img1_data_stream_1_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        img2_Im_data_stream_s_read = grp_Mul_fu_286_src2_data_stream_V_read;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img2_Im_data_stream_s_read = grp_Mul_fu_277_src2_data_stream_V_read;
    end else begin
        img2_Im_data_stream_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        img2_Im_data_stream_s_write = grp_Split_fu_348_dst1_data_stream_V_write;
    end else begin
        img2_Im_data_stream_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        img2_Re_data_stream_s_read = grp_Mul_fu_286_src2_data_stream_V_read;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        img2_Re_data_stream_s_read = grp_Mul_fu_277_src2_data_stream_V_read;
    end else begin
        img2_Re_data_stream_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        img2_Re_data_stream_s_write = grp_Split_fu_348_dst0_data_stream_V_write;
    end else begin
        img2_Re_data_stream_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        img2_data_stream_0_s_read = grp_Split_fu_348_src_data_stream_0_V_read;
    end else begin
        img2_data_stream_0_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        img2_data_stream_0_s_write = grp_AXIvideo2Mat_fu_295_img_data_stream_0_V_write;
    end else begin
        img2_data_stream_0_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        img2_data_stream_1_s_read = grp_Split_fu_348_src_data_stream_1_V_read;
    end else begin
        img2_data_stream_1_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        img2_data_stream_1_s_write = grp_AXIvideo2Mat_fu_295_img_data_stream_1_V_write;
    end else begin
        img2_data_stream_1_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        img_result1_data_str_read = grp_AddWeighted_fu_268_src1_data_stream_V_read;
    end else begin
        img_result1_data_str_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        img_result1_data_str_write = grp_Mul_fu_277_dst_data_stream_V_write;
    end else begin
        img_result1_data_str_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        img_result2_data_str_read = grp_AddWeighted_fu_268_src2_data_stream_V_read;
    end else begin
        img_result2_data_str_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        img_result2_data_str_write = grp_Mul_fu_286_dst_data_stream_V_write;
    end else begin
        img_result2_data_str_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        img_result3_data_str_read = grp_AddWeighted_fu_268_src2_data_stream_V_read;
    end else begin
        img_result3_data_str_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        img_result3_data_str_write = grp_Mul_fu_277_dst_data_stream_V_write;
    end else begin
        img_result3_data_str_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        img_result4_data_str_read = grp_AddWeighted_fu_268_src1_data_stream_V_read;
    end else begin
        img_result4_data_str_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        img_result4_data_str_write = grp_Mul_fu_286_dst_data_stream_V_write;
    end else begin
        img_result4_data_str_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_i_reg_509 == 1'd0))) begin
        img_result5_data_str_read = 1'b1;
    end else begin
        img_result5_data_str_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        img_result5_data_str_write = grp_AddWeighted_fu_268_dst_data_stream_V_write;
    end else begin
        img_result5_data_str_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_i_reg_509 == 1'd0))) begin
        img_result6_data_str_read = 1'b1;
    end else begin
        img_result6_data_str_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        img_result6_data_str_write = grp_AddWeighted_fu_268_dst_data_stream_V_write;
    end else begin
        img_result6_data_str_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_result_axi_V_data_V_write = grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_data_V_write;
    end else begin
        img_result_axi_V_data_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_result_axi_V_dest_V_write = grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_dest_V_write;
    end else begin
        img_result_axi_V_dest_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_result_axi_V_id_V_write = grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_id_V_write;
    end else begin
        img_result_axi_V_id_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_result_axi_V_keep_V_write = grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_keep_V_write;
    end else begin
        img_result_axi_V_keep_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_result_axi_V_last_V_write = grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_last_V_write;
    end else begin
        img_result_axi_V_last_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_result_axi_V_strb_V_write = grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_strb_V_write;
    end else begin
        img_result_axi_V_strb_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_result_axi_V_user_V_write = grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_user_V_write;
    end else begin
        img_result_axi_V_user_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_result_data_stre_1_read = grp_Mat2AXIvideo_fu_326_img_data_stream_1_V_read;
    end else begin
        img_result_data_stre_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_i_reg_509 == 1'd0))) begin
        img_result_data_stre_1_write = 1'b1;
    end else begin
        img_result_data_stre_1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_result_data_stre_read = grp_Mat2AXIvideo_fu_326_img_data_stream_0_V_read;
    end else begin
        img_result_data_stre_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_i_reg_509 == 1'd0))) begin
        img_result_data_stre_write = 1'b1;
    end else begin
        img_result_data_stre_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        img_src1_axi_V_data_V_read = grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_read;
    end else begin
        img_src1_axi_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        img_src1_axi_V_dest_V_read = grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_read;
    end else begin
        img_src1_axi_V_dest_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        img_src1_axi_V_id_V_read = grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_read;
    end else begin
        img_src1_axi_V_id_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        img_src1_axi_V_keep_V_read = grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_read;
    end else begin
        img_src1_axi_V_keep_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        img_src1_axi_V_last_V_read = grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_read;
    end else begin
        img_src1_axi_V_last_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        img_src1_axi_V_strb_V_read = grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_read;
    end else begin
        img_src1_axi_V_strb_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        img_src1_axi_V_user_V_read = grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_read;
    end else begin
        img_src1_axi_V_user_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        img_src2_axi_V_data_V_read = grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_data_V_read;
    end else begin
        img_src2_axi_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        img_src2_axi_V_dest_V_read = grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_dest_V_read;
    end else begin
        img_src2_axi_V_dest_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        img_src2_axi_V_id_V_read = grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_id_V_read;
    end else begin
        img_src2_axi_V_id_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        img_src2_axi_V_keep_V_read = grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_keep_V_read;
    end else begin
        img_src2_axi_V_keep_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        img_src2_axi_V_last_V_read = grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_last_V_read;
    end else begin
        img_src2_axi_V_last_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        img_src2_axi_V_strb_V_read = grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_strb_V_read;
    end else begin
        img_src2_axi_V_strb_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        img_src2_axi_V_user_V_read = grp_AXIvideo2Mat_fu_295_AXI_video_strm_V_user_V_read;
    end else begin
        img_src2_axi_V_user_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_AXIvideo2Mat_fu_295_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_Split_fu_348_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_AddWeighted_fu_268_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (exitcond4_i_fu_358_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_i_fu_369_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_i_fu_369_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_Mat2AXIvideo_fu_326_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((img_result_data_stre_1_full_n == 1'b0) & (exitcond_i_reg_509 == 1'd0)) | ((img_result_data_stre_full_n == 1'b0) & (exitcond_i_reg_509 == 1'd0)) | ((img_result6_data_str_empty_n == 1'b0) & (exitcond_i_reg_509 == 1'd0)) | ((img_result5_data_str_empty_n == 1'b0) & (exitcond_i_reg_509 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((img_result_data_stre_1_full_n == 1'b0) & (exitcond_i_reg_509 == 1'd0)) | ((img_result_data_stre_full_n == 1'b0) & (exitcond_i_reg_509 == 1'd0)) | ((img_result6_data_str_empty_n == 1'b0) & (exitcond_i_reg_509 == 1'd0)) | ((img_result5_data_str_empty_n == 1'b0) & (exitcond_i_reg_509 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((img_result_data_stre_1_full_n == 1'b0) & (exitcond_i_reg_509 == 1'd0)) | ((img_result_data_stre_full_n == 1'b0) & (exitcond_i_reg_509 == 1'd0)) | ((img_result6_data_str_empty_n == 1'b0) & (exitcond_i_reg_509 == 1'd0)) | ((img_result5_data_str_empty_n == 1'b0) & (exitcond_i_reg_509 == 1'd0))));
end

always @ (*) begin
    ap_block_state10_on_subcall_done = ((grp_Mul_fu_286_ap_done == 1'b0) | (grp_Mul_fu_277_ap_done == 1'b0) | (grp_AddWeighted_fu_268_ap_done == 1'b0));
end

assign ap_block_state14_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp0_stage0_iter1 = (((img_result_data_stre_1_full_n == 1'b0) & (exitcond_i_reg_509 == 1'd0)) | ((img_result_data_stre_full_n == 1'b0) & (exitcond_i_reg_509 == 1'd0)) | ((img_result6_data_str_empty_n == 1'b0) & (exitcond_i_reg_509 == 1'd0)) | ((img_result5_data_str_empty_n == 1'b0) & (exitcond_i_reg_509 == 1'd0)));
end

always @ (*) begin
    ap_block_state4_on_subcall_done = ((grp_Split_fu_348_ap_done == 1'b0) | (grp_AXIvideo2Mat_fu_295_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state8_on_subcall_done = ((grp_Mul_fu_286_ap_done == 1'b0) | (grp_Mul_fu_277_ap_done == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond4_i_fu_358_p2 = ((t_V_reg_246 == rows) ? 1'b1 : 1'b0);

assign exitcond_i_fu_369_p2 = ((t_V_1_reg_257 == cols) ? 1'b1 : 1'b0);

assign grp_AXIvideo2Mat_fu_295_ap_start = grp_AXIvideo2Mat_fu_295_ap_start_reg;

assign grp_AddWeighted_fu_268_ap_start = grp_AddWeighted_fu_268_ap_start_reg;

assign grp_Mat2AXIvideo_fu_326_ap_start = grp_Mat2AXIvideo_fu_326_ap_start_reg;

assign grp_Mul_fu_277_ap_start = grp_Mul_fu_277_ap_start_reg;

assign grp_Mul_fu_286_ap_start = grp_Mul_fu_286_ap_start_reg;

assign grp_Split_fu_348_ap_start = grp_Split_fu_348_ap_start_reg;

assign i_V_fu_363_p2 = (t_V_reg_246 + 32'd1);

assign img_result_axi_V_data_V_din = grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_data_V_din;

assign img_result_axi_V_dest_V_din = grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_dest_V_din;

assign img_result_axi_V_id_V_din = grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_id_V_din;

assign img_result_axi_V_keep_V_din = grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_keep_V_din;

assign img_result_axi_V_last_V_din = grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_last_V_din;

assign img_result_axi_V_strb_V_din = grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_strb_V_din;

assign img_result_axi_V_user_V_din = grp_Mat2AXIvideo_fu_326_AXI_video_strm_V_user_V_din;

assign j_V_fu_374_p2 = (t_V_1_reg_257 + 32'd1);

endmodule //array_mul
